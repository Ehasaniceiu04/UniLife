@page "/baglidersler"

@inject IMatToaster matToaster
@inject HttpClient Http
@inject AppState appState
@page "/TextBox/Default-Functionalities"
@using Syncfusion.Blazor.Inputs
@using Semerkand.Shared.Dto.Definitions
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.SplitButtons

<style>
    .mdc-select__anchor {
        width: 90%;
    }

    .e-input-picture::before {
        content: '\e335';
        font-family: e-icons;
    }

    .e-input-calendar::before {
        content: '\e901';
        font-family: e-icons;
        font-size: 13px;
    }


    .custom-padding-05 {
        padding-top: 5px;
    }

    @@media only screen and (max-width: 480px) {
        .content-wrapper {
            width: 92%;
        }

        .col-xs-4,
        .col-xs-4,
        .col-xs-12 {
            padding: 10px 5px;
            width: 100%;
        }

        .content-wrapper div.row {
            padding: 0px;
        }
    }

    #description td {
        vertical-align: top;
    }

    .e-outline.e-float-input,
    .e-outline.e-float-input.e-control-wrapper {
        margin-top: 0;
    }

    .fabric .row.material2,
    .bootstrap .row.material2,
    .bootstrap4 .row.material2,
    .highcontrast .row.material2 {
        display: none;
    }

    .e-upload-picture::before {
        content: '\e335';
        font-family: e-icons;
    }

    .bootstrap4 .e-upload-picture::before {
        content: '\e769';
        font-family: e-icons;
    }

    .e-btn.e-primary, .e-css.e-btn.e-primary {
        background-color: #00A6B6;
        border-color: #00A6B6;
    }

    .e-float-input.e-input-group input, .e-float-input.e-input-group textarea {
        border: 0;
        color: royalblue;
        font-size: large;
    }



    .e-numeric.e-style .e-control.e-numerictextbox {
        color: royalblue;
        font-size: xx-large;
        border: 0px;
    }

    .e-input-group.e-style.e-control-wrapper:not(.e-success):not(.e-warning):not(.e-error):not(.e-float-icon-left), .e-float-input.e-control-wrapper:hover:not(.e-success):not(.e-warning):not(.e-error):not(.e-disabled):not(.e-float-icon-left) {
        border-color: royalblue;
    }

    .e-control-wrapper.e-numeric.e-float-input.e-style .e-spin-down {
        color: royalblue;
    }

    .e-control-wrapper.e-numeric.e-float-input.e-style .e-float-line::before {
        background: royalblue;
    }

    .e-control-wrapper.e-numeric.e-float-input.e-style .e-float-line::after {
        background: royalblue;
    }

    .e-control-wrapper.e-numeric.e-float-input.e-style .e-spin-up {
        color: royalblue;
    }

    .e-control-wrapper.e-numeric.e-float-input.e-style.e-input-group .e-float-text.e-label-top {
        color: royalblue;
        font-size: medium;
    }
</style>

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <div class="col-xs-12 col-sm-12 col-lg-12 col-md-12">
                <MatBlazor.MatHeadline5>Program : @(appState.MufredatState==null?"Müfredat seçmelisiniz.": appState.MufredatState.Program.Ad)</MatBlazor.MatHeadline5>
                <MatBlazor.MatHeadline5>Müfredat : @(appState.MufredatState == null ? "Müfredat seçmelisiniz." : appState.MufredatState?.Ad)</MatBlazor.MatHeadline5>
            </div>
        </div>
        <div class="row">
            <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
                <MatTextField Style="width:90%" Label="Adı" @bind-Value="@dersDto.Ad"></MatTextField>
                @*<SfTextBox Placeholder="Adı" Value="@dersDto.Ad" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>*@
            </div>
            <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
                <MatTextField Style="width:90%" Label="Kod" @bind-Value="@dersDto.Kod"></MatTextField>
                @*<SfTextBox CssClass="e-rtl" Placeholder="Kod" Value="@dersDto.Kod" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>*@
            </div>
            <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
                <MatSelect Label="Dönem i" Outlined="true" @bind-Value="@dersDto.DonemId">
                    @foreach (var item in donemDtos)
                    {
                        <MatOption TValue="int" Value="item.Id">@item.Ad</MatOption>
                    }
                </MatSelect>
                @*<SfDropDownList TValue="string" TItem="DonemDto" Placeholder="Dönem i" DataSource="@donemDtos" FloatLabelType="@FloatLabelType.Auto">
                        <DropDownListFieldSettings Value="Id" Text="Ad"></DropDownListFieldSettings>
                    </SfDropDownList>*@
            </div>
        </div>
        <div class="row">
            <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
                @*<SfTextBox Placeholder="KisaAd" Value="@dersDto.KisaAd" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>*@
                <MatTextField Style="width:90%" Label="KisaAd" @bind-Value="@dersDto.KisaAd"></MatTextField>
            </div>

            <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
                @*<SfNumericTextBox TValue="int?" Value="@dersDto.Akts" CssClass="e-style" ValidateDecimalOnType=true Decimals=1 Format="n1" Placeholder="Akts" FloatLabelType="@FloatLabelType.Auto"></SfNumericTextBox>*@
                <MatTextField Style="width:90%" Label="Akts" @bind-Value="@dersDto.Akts"></MatTextField>
            </div>
            <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
                @*<SfNumericTextBox TValue="int?" Value="@dersDto.GeçmeNotu" CssClass="e-style" ValidateDecimalOnType=true Decimals=1 Format="n1" Placeholder="GeçmeNotu" FloatLabelType="@FloatLabelType.Auto"></SfNumericTextBox>*@
                <MatTextField Style="width:90%" Label="GeçmeNotu" @bind-Value="@dersDto.GecmeNotu"></MatTextField>

            </div>
        </div>
        <div class="row">
            <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
                <b>Eski </b>
                <hr />
            </div>
        </div>
        <div class="row">
            <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">

                <SfTextBox Placeholder="Adı" Value="@dersDto.Ad" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
            </div>
            <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
                <SfTextBox Placeholder="Kod" Value="@dersDto.Kod" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
            </div>
            <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
                <SfDropDownList TValue="string" TItem="DonemDto" Placeholder="Dönem i" DataSource="@donemDtos" FloatLabelType="@FloatLabelType.Auto">
                    <DropDownListFieldSettings Value="Id" Text="Ad"></DropDownListFieldSettings>
                </SfDropDownList>
            </div>
        </div>
        <div class="row">
            <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
                <SfTextBox Placeholder="KisaAd" Value="@dersDto.KisaAd" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
            </div>

            <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
                <SfNumericTextBox TValue="int?" Value="@dersDto.Akts" CssClass="e-style" ValidateDecimalOnType=true Decimals=1 Format="n1" Placeholder="Akts" FloatLabelType="@FloatLabelType.Auto"></SfNumericTextBox>
            </div>
            <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
                <SfNumericTextBox TValue="int?" Value="@dersDto.GecmeNotu" CssClass="e-style" ValidateDecimalOnType=true Decimals=1 Format="n1" Placeholder="GeçmeNotu" FloatLabelType="@FloatLabelType.Auto"></SfNumericTextBox>

            </div>
        </div>



        <br />
        <hr />
        <div class="row">
            <div class="col-xs-12 col-sm-12 col-lg-4 col-md-4 text-center">
                <SfProgressButton OnClick="FarkliMufredat" CssClass="center-block e-danger" Content="< Faklı Müfredat"></SfProgressButton>
            </div>
            <div class="col-xs-12 col-sm-12 col-lg-4 col-md-4 text-center">
                <SfProgressButton OnClick="KaydetYeni" CssClass="center-block e-warning" Content="Kaydet,Yeni">
                    <ProgressButtonSpinSettings Position="SpinPosition.Bottom"></ProgressButtonSpinSettings>
                </SfProgressButton>
            </div>
            <div class="col-xs-12 col-sm-12 col-lg-4 col-md-4 text-center">
                <SfProgressButton OnClick="KaydetDersler" Content="Kaydet,Dersler >" CssClass="center-block e-primary">
                    <ProgressButtonSpinSettings Position="SpinPosition.Right"></ProgressButtonSpinSettings>
                </SfProgressButton>
            </div>

        </div>

    </div>
</div>

@code  {

    protected async Task KaydetDersler()
    {
        //kaydet
        dersDto.MufredatId = appState.MufredatState.Id;
        var createResult= await Create(dersDto);
        if (createResult)
        {
            //base.InvokeAsync(StateHasChanged);
            //derslere git
            await TabDegis.InvokeAsync(2);
        }

    }
    protected async Task KaydetYeni()
    {
        //Kaydet
        dersDto.MufredatId = appState.MufredatState.Id;
        await Create(dersDto);
        //base.InvokeAsync(StateHasChanged);
        //sayfada kal
        //await TabDegis.InvokeAsync(1);
    }
    protected async Task FarkliMufredat()
    {
        //appstate temizle
        appState.MufredatState = null;
        //base.InvokeAsync(StateHasChanged);
        //sayfada müfredata dön sonraki iki tabı kapa
        await TabDegis.InvokeAsync(0);
    }

    public async Task<bool> Create(DersDto dersDto)
    {
        try
        {
            ApiResponseDto apiResponse = await Http.PostJsonAsync<ApiResponseDto>
                ("api/ders", dersDto);
            if (apiResponse.StatusCode == Status200OK)
            {
                matToaster.Add(apiResponse.Message, MatToastType.Success);
                return true;
            }
            else
            {
                matToaster.Add(apiResponse.Message + " : " + apiResponse.StatusCode, MatToastType.Danger, "Ders oluşturulurken hata oluştu");
                return false;
            }
        }
        catch (Exception ex)
        {
            matToaster.Add(ex.Message, MatToastType.Danger, "Ders oluşturulurken hata oluştu");
            return false;
        }
    }


    [Parameter]
    public EventCallback<int> TabDegis { get; set; }

    SfTextBox date;
    SfTextBox upload;
    public void onCreateDate()
    {
        this.date.AddIcon("append", "e-date-icon");
    }
    public void onCreateUpload()
    {
        this.upload.AddIcon("prepend", "e-upload-picture");
    }

    public string numberClass { get; set; }

    public void OnInput(InputEventArgs args)
    {
        if (!System.Text.RegularExpressions.Regex.IsMatch(args.Value, "^[0-9]*$"))
        {
            numberClass = "e-error";
        }
        else
        {
            numberClass = "e-success";
        }
        this.StateHasChanged();
    }


    public DersDto dersDto { get; set; } = new DersDto();

    List<DonemDto> donemDtos = new List<DonemDto>();

    protected override async Task OnInitializedAsync()
    {
        ApiResponseDto apiResponse = await Http.GetFromJsonAsync<ApiResponseDto>("api/donem");
        donemDtos = Newtonsoft.Json.JsonConvert.DeserializeObject<DonemDto[]>(apiResponse.Result.ToString()).ToList<DonemDto>();
    }


    //[Inject]
    //protected IJSRuntime JsRuntime { get; set; }

    //protected override async Task OnAfterRenderAsync(bool firstRender)
    //{
    //    if (firstRender)
    //    {
    //        var Locale = await Http.GetJsonAsyncExtension<object>("tr.json");
    //        this.JsRuntime.Sf().LoadLocaleData(Locale).SetCulture("tr");

    //        //this.JsRuntime.Sf().LoadLocaleData("tr.json").SetCulture("tr");
    //    }
    //}
}
