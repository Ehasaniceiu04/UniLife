@inject HttpClient Http;
@using Semerkand.Shared.Dto.Definitions
@inject IMatToaster matToaster
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Inputs
@using System.Net

@using Newtonsoft.Json

@*<style>
        .e-dialog {
            max-width: 30%;
        }
    </style>*@

<ControlSection>
    <SfGrid ShowColumnChooser="true" @ref="FakulteGrid" DataSource="@fakulteDtos" Toolbar="@(new List<string>() { "Add", "Edit", "Delete","ColumnChooser" })" AllowSorting="true" AllowFiltering="true" AllowPaging="true" AllowGrouping="true" ColumnMenuItems=@MenuItems ShowColumnMenu="true" Width="100%">
        @*<SfDataManager AdaptorInstance="@typeof(CustomAdaptor)" Adaptor="Adaptors.CustomAdaptor"></SfDataManager>*@
        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.CheckBox"></GridFilterSettings>
        <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>
        <GridEvents OnActionComplete="ActionCompletedHandler" TValue="FakulteDto"></GridEvents>
        <GridEditSettings ShowDeleteConfirmDialog="true" AllowAdding="true" AllowDeleting="true" AllowEditing="true" Mode="EditMode.Dialog">
            <Template>
                @{
                    FakulteDto fakulteInfo = (context as FakulteDto);


                    <div class="col-md-10 offset-md-1">
                        <div class="form-row mt-4">
                            <div class="col-sm-5 pb-3">
                                <label for="Id">Id</label>
                                <SfTextBox ID="Id" CssClass="form-control" Value="@(fakulteInfo.Id.ToString())" Enabled="@false"></SfTextBox>
                            </div>
                            <div class="col-sm-3 pb-3">
                                <label for="Ad">Ad</label>
                                <SfTextBox ID="Ad" Placeholder="Ad" CssClass="form-control" Value="@(fakulteInfo.Ad)"></SfTextBox>
                            </div>
                            <div class="col-sm-4 pb-3">
                                <label for="Kod">Kod</label>
                                <SfTextBox ID="Kod" CssClass="form-control" Value="@(fakulteInfo.Kod.ToString())" Enabled="@true"></SfTextBox>
                            </div>
                            <div class="col-sm-6 pb-3">
                                <label for="UniversiteId">Üniversite</label>
                                <SfDropDownList ID="UniversiteId" CssClass="form-control" Value="@(fakulteInfo.UniversiteId.ToString())" TValue="string" TItem="UniversiteDto" Index="0" DataSource="universiteDtos">
                                    <DropDownListFieldSettings Value="Id" Text="Ad"></DropDownListFieldSettings>
                                </SfDropDownList>
                            </div>
                            <div class="col-sm-6 pb-3">
                                <label for="FakulteTurId">Fakulte Tür</label>
                                <SfDropDownList ID="FakulteTurId" CssClass="form-control" Value="@(fakulteInfo.FakulteTurId.ToString())" TValue="string" TItem="FakulteTurDto" Index="0" DataSource="fakulteTurDtos">
                                    <DropDownListFieldSettings Value="Id" Text="Ad"></DropDownListFieldSettings>
                                </SfDropDownList>
                            </div>
                            <div class="col-sm-6 pb-3">
                                <label for="OgrenimTurId">Ögrenim Tür</label>
                                <SfDropDownList ID="OgrenimTurId" CssClass="form-control" Value="@(fakulteInfo.OgrenimTurId.ToString())" TValue="string" TItem="OgrenimTurDto" Index="0" DataSource="ogrenimTurDtos">
                                    <DropDownListFieldSettings Value="Id" Text="Ad"></DropDownListFieldSettings>
                                </SfDropDownList>
                            </div>
                            <div class="col-sm-2 pb-2">
                                <label for="KisaAd">Kısa Ad</label>
                                <SfTextBox ID="KisaAd" CssClass="form-control" Value="@(fakulteInfo.KisaAd)" Enabled="@true"></SfTextBox>
                            </div>
                            <div class="col-sm-2 pb-2">
                                <label for="AdEn">AdEn</label>
                                <SfTextBox ID="AdEn" CssClass="form-control" Value="@(fakulteInfo.AdEn)" Enabled="@true"></SfTextBox>
                            </div>
                            <div class="col-sm-2 pb-2">
                                <label for="EPosta">EPosta</label>
                                <SfTextBox ID="EPosta" CssClass="form-control" Value="@(fakulteInfo.EPosta)" Enabled="@true"></SfTextBox>
                            </div>

                            <div class="col-12 pb-2">
                                <div class="form-row">
                                    <label class="col-md col-form-label" for="Tel">Tel</label>
                                    <SfTextBox ID="Tel" CssClass="form-control col-sm-2" Value="@(fakulteInfo.Tel)" Enabled="@true"></SfTextBox>
                                    <label class="col-md col-form-label" for="Adres">Adres</label>
                                    <SfTextBox ID="Adres" CssClass="form-control col-sm-2" Value="@(fakulteInfo.Adres)" Enabled="@true"></SfTextBox>
                                    <label class="col-md col-form-label" for="Faks">Faks</label>
                                    <SfTextBox ID="Faks" CssClass="form-control col-sm-2" Value="@(fakulteInfo.Faks)" Enabled="@true"></SfTextBox>
                                    <label class="col-md col-form-label" for="Web">Web</label>
                                    <SfTextBox ID="Web" CssClass="form-control col-sm-2" Value="@(fakulteInfo.Web)" Enabled="@true"></SfTextBox>
                                </div>
                            </div>
                            <div class="col-12 pb-2">
                                <div class="form-row">
                                    <label class="col-md col-form-label" for="IlceId">IlceId</label>
                                    <SfTextBox ID="IlceId" CssClass="form-control col-md-1" Value="@(fakulteInfo.IlceId.ToString())" Enabled="@true"></SfTextBox>
                                    <label class="col-md col-form-label" for="IlKod">IlKod</label>
                                    <SfTextBox ID="IlKod" CssClass="form-control col-md-1" Value="@(fakulteInfo.IlKod.ToString())" Enabled="@true"></SfTextBox>
                                    <label class="col-md col-form-label" for="Tip">Tip</label>
                                    <SfTextBox ID="Tip" CssClass="form-control col-md-1" Value="@(fakulteInfo.Tip.ToString())" Enabled="@true"></SfTextBox>
                                    <label class="col-md col-form-label" for="Web">Web</label>
                                    <SfTextBox ID="OgrenimSure" CssClass="form-control col-md-1" Value="@(fakulteInfo.OgrenimSure.ToString())" Enabled="@true"></SfTextBox>
                                    <label class="col-md col-form-label" for="DiplomaAd">DiplomaAd</label>
                                    <SfTextBox ID="DiplomaAd" CssClass="form-control col-md-1" Value="@(fakulteInfo.DiplomaAd)" Enabled="@true"></SfTextBox>
                                    <label class="col-md col-form-label" for="BirimID">BirimID</label>
                                    <SfTextBox ID="BirimID" CssClass="form-control col-md-1" Value="@(fakulteInfo.BirimID.ToString())" Enabled="@true"></SfTextBox>
                                </div>
                            </div>
                        </div>

                    </div>

                }
            </Template>

        </GridEditSettings>
        <GridColumns>
            <GridColumn Visible="false" Field=@nameof(FakulteDto.Id) HeaderText="Fakülte ID" AllowEditing="false" IsIdentity="true" IsPrimaryKey="true" TextAlign="TextAlign.Left" Width="140"></GridColumn>
            <GridColumn Field=@nameof(FakulteDto.Ad) HeaderText="Fakülte İsim" ValidationRules="@(new { required=true})" Width="170"></GridColumn>
            <GridColumn Field=@nameof(FakulteDto.Kod) HeaderText="Fakülte Kod" ValidationRules="@(new { required=true,number= true,maxLength=5})" Width="170"></GridColumn>
            <GridColumn Field=@nameof(FakulteDto.UniversiteId) HeaderText="Üniversite" ForeignKeyValue="Ad" ForeignKeyField="Id" DataSource="@universiteDtos" Width="150"></GridColumn>
            <GridColumn Field=@nameof(FakulteDto.KisaAd) HeaderText="KisaAd" ValidationRules="@(new { required=true})" Width="170"></GridColumn>
            <GridColumn Field=@nameof(FakulteDto.AdEn) HeaderText="AdEn" Width="170"></GridColumn>
            <GridColumn Field=@nameof(FakulteDto.EPosta) HeaderText="EPosta" Width="170"></GridColumn>
            <GridColumn Field=@nameof(FakulteDto.Tel) HeaderText="Tel" Width="170"></GridColumn>
            <GridColumn Field=@nameof(FakulteDto.FakulteTurId) HeaderText="Fakulte Tür" ForeignKeyValue="Ad" ForeignKeyField="Id" DataSource="@fakulteTurDtos" Width="150"></GridColumn>
            <GridColumn Field=@nameof(FakulteDto.OgrenimTurId) HeaderText="Öğrenim Tür" ForeignKeyValue="Ad" ForeignKeyField="Id" DataSource="@ogrenimTurDtos" Width="150"></GridColumn>
            <GridColumn Visible="false" Field=@nameof(FakulteDto.Adres) HeaderText="Adres" Width="170"></GridColumn>
            <GridColumn Visible="false" Field=@nameof(FakulteDto.Faks) HeaderText="Faks" Width="170"></GridColumn>
            <GridColumn Visible="false" Field=@nameof(FakulteDto.Web) HeaderText="Web" Width="170"></GridColumn>
            <GridColumn Visible="false" Field=@nameof(FakulteDto.IlceId) HeaderText="IlceId" Width="170"></GridColumn>
            <GridColumn Visible="false" Field=@nameof(FakulteDto.OgrenimSure) HeaderText="OgrenimSure" Width="170"></GridColumn>
            <GridColumn Visible="false" Field=@nameof(FakulteDto.IlKod) HeaderText="IlKod" Width="170"></GridColumn>
            <GridColumn Visible="false" Field=@nameof(FakulteDto.Tip) HeaderText="Tip" Width="170"></GridColumn>
            <GridColumn Visible="false" Field=@nameof(FakulteDto.DiplomaAd) HeaderText="DiplomaAd" Width="170"></GridColumn>
            <GridColumn Visible="false" Field=@nameof(FakulteDto.BirimID) HeaderText="BirimID" Width="170"></GridColumn>


        </GridColumns>
    </SfGrid>
</ControlSection>


@code{

    SfGrid<FakulteDto> FakulteGrid;

    List<FakulteDto> fakulteDtos = new List<FakulteDto>();

    List<UniversiteDto> universiteDtos = new List<UniversiteDto>();
    List<FakulteTurDto> fakulteTurDtos = new List<FakulteTurDto>();
    List<OgrenimTurDto> ogrenimTurDtos = new List<OgrenimTurDto>();

    public string[] MenuItems = new string[] { "Group", "Ungroup", "ColumnChooser", "Filter" };

    protected override async Task OnInitializedAsync()
    {
        await ReadUniversites();

        ApiResponseDto apiResponse = await Http.GetFromJsonAsync<ApiResponseDto>("api/universite");
        universiteDtos = Newtonsoft.Json.JsonConvert.DeserializeObject<UniversiteDto[]>(apiResponse.Result.ToString()).ToList<UniversiteDto>();
        ApiResponseDto apiResponseFakulteTur = await Http.GetFromJsonAsync<ApiResponseDto>("api/fakulteTur");
        fakulteTurDtos = Newtonsoft.Json.JsonConvert.DeserializeObject<FakulteTurDto[]>(apiResponseFakulteTur.Result.ToString()).ToList<FakulteTurDto>();
        ApiResponseDto apiResponseOgrenimTur = await Http.GetFromJsonAsync<ApiResponseDto>("api/ogrenimtur");
        ogrenimTurDtos = Newtonsoft.Json.JsonConvert.DeserializeObject<OgrenimTurDto[]>(apiResponseOgrenimTur.Result.ToString()).ToList<OgrenimTurDto>();
    }

    async Task ReadUniversites()
    {
        ApiResponseDto apiResponse = await Http.GetFromJsonAsync<ApiResponseDto>("api/fakulte");

        if (apiResponse.StatusCode == Status200OK)
        {
            matToaster.Add(apiResponse.Message, MatToastType.Success, "Fakülteler getirildi");
            fakulteDtos = Newtonsoft.Json.JsonConvert.DeserializeObject<FakulteDto[]>(apiResponse.Result.ToString()).ToList<FakulteDto>();
        }
        else
        {
            matToaster.Add(apiResponse.Message + " : " + apiResponse.StatusCode, MatToastType.Danger, "Fakülte bilgisi getirilirken hata oluştu!");
        }
    }
    public void ActionBeginHandler(ActionEventArgs<FakulteDto> args)
    {

    }

    public void ActionCompletedHandler(ActionEventArgs<FakulteDto> args)
    {
        if (args.RequestType == Syncfusion.Blazor.Grids.Action.BeginEdit)
        {

        }
        if (args.RequestType == Syncfusion.Blazor.Grids.Action.Save)
        {
            if (args.Action == "edit")
            {
                Update(args.Data);
            }
            else if (args.Action == "add")
            {
                Create(args.Data);
            }

        }
        if (args.RequestType == Syncfusion.Blazor.Grids.Action.Delete)
        {
            Delete(args.Data);
        }
    }

    public async Task Create(FakulteDto fakulteDto)
    {
        try
        {
            ApiResponseDto apiResponse = await Http.PostJsonAsync<ApiResponseDto>
                ("api/fakulte", fakulteDto);
            if (apiResponse.StatusCode == Status200OK)
            {
                matToaster.Add(apiResponse.Message, MatToastType.Success);
                //todo = Newtonsoft.Json.JsonConvert.DeserializeObject<FakulteDto>
                //(apiResponse.Result.ToString());
                //todos.Add(todo);
                //todo = new TodoDto(); //reset todo after insert
            }
            else
            {
                //TODO Ahmet 1**
                //TODO Ahmet 2**
                fakulteDtos.Remove(fakulteDto);
                FakulteGrid.Refresh();
                matToaster.Add(apiResponse.Message + " : " + apiResponse.StatusCode, MatToastType.Danger, "fakulte Creation Failed");
            }
        }
        catch (Exception ex)
        {
            //TODO Ahmet 1**: liste içinden değinde gride eklediğini sil demeli !!
            //TODO Ahmet 2**: Dbden hata geldiği zaman Bu hata sebebini mantıklı şekilde buraya vermemiz gerekiyor. Aynı Idli kayıt gönder patlatıyon.

            fakulteDtos.Remove(fakulteDto);
            FakulteGrid.Refresh();
            matToaster.Add(ex.Message, MatToastType.Danger, "Universite Creation Failed");
        }
    }


    public async void Update(FakulteDto fakulteDto)
    {
        //this updates the IsCompleted flag only
        try
        {
            ApiResponseDto apiResponse = await Http.PutJsonAsync<ApiResponseDto>
                ("api/fakulte", fakulteDto);

            if (!apiResponse.IsError)
            {
                matToaster.Add(apiResponse.Message, MatToastType.Success);
            }
            else
            {
                matToaster.Add(apiResponse.Message + " : " + apiResponse.StatusCode, MatToastType.Danger, "Universite Save Failed");
                //update failed gridi boz !
            }
        }
        catch (Exception ex)
        {
            matToaster.Add(ex.Message, MatToastType.Danger, "Universite Save Failed");
            //update failed gridi boz !
        }
    }

    public async Task Delete(FakulteDto fakulteDto)
    {
        try
        {
            var response = await Http.DeleteAsync("api/fakulte/" + fakulteDto.Id);
            if (response.StatusCode == (HttpStatusCode)Status200OK)
            {
                matToaster.Add("Universite Deleted", MatToastType.Success);
                fakulteDtos.Remove(fakulteDto);
            }
            else
            {
                matToaster.Add("Universite Delete Failed: " + response.StatusCode, MatToastType.Danger);
            }
            //deleteDialogOpen = false;
        }
        catch (Exception ex)
        {
            matToaster.Add(ex.Message, MatToastType.Danger, "Universite Save Failed");
        }
    }


    //[Inject]
    //protected IJSRuntime JsRuntime { get; set; }

    //protected override async Task OnAfterRenderAsync(bool firstRender)
    //{
    //    if (firstRender)
    //    {
    //        var Locale = await Http.GetJsonAsyncExtension<object>
    //("tr.json");
    //        this.JsRuntime.Sf().LoadLocaleData(Locale).SetCulture("tr");

    //        //this.JsRuntime.Sf().LoadLocaleData("tr.json").SetCulture("tr");
    //    }
    //}
}
