@page "/"

@using Syncfusion.Blazor.Calendars
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor

@using Semerkand.CommonUI.Components.Grid.DataGrid

@inject HttpClient Http;

<h1>Örnek Gridimiz - CRUD</h1>
<p>
    Örnek Gridmiz, Örnek Gridmiz, Örnek Gridmiz, Örnek Gridmiz, Örnek Gridmiz, Örnek Gridmiz, Örnek Gridmiz,
</p>
<DialogEditing></DialogEditing>

@*<CultureChooser />*@

@code{


    [Inject]
    protected IJSRuntime JsRuntime { get; set; }



    public class Emp
    {
        public int EmpId { get; set; }
        public string Name { get; set; }
    }

    public List<Emp> EmpList { get; set; }

    protected override void OnInitialized()
    {
        EmpList = Enumerable.Range(1, 75).Select(x => new Emp()
        {
            EmpId = 100 + x,
            Name = "ahmet"
        }).ToList();
    }



    //protected override async Task OnInitializedAsync()
    //{

    //    var Locale = await Http.GetJsonAsyncExtension<object>("tr.json");
    //    this.JsRuntime.Sf().LoadLocaleData(Locale).SetCulture("tr");



    //}


    //protected override async Task OnAfterRenderAsync(bool firstRender)
    //{
    //    if (firstRender)
    //    {
    //        var Locale = await Http.GetJsonAsyncExtension<object>("tr.json");
    //        this.JsRuntime.Sf().LoadLocaleData(Locale).SetCulture("tr");

    //        //this.JsRuntime.Sf().LoadLocaleData("tr.json").SetCulture("tr");
    //    }
    //}

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var Locale = await Http.GetJsonAsyncExtension<object>("tr.json");
            this.JsRuntime.Sf().LoadLocaleData(Locale).SetCulture("tr");

            //this.JsRuntime.Sf().LoadLocaleData("tr.json").SetCulture("tr");
        }
    }


    bool lazySnackbarIsOpen = false;

    //await base.OnInitializedAsync();

    //await Task.Delay(TimeSpan.FromSeconds(3)).ContinueWith((_) =>
    //{
    //    this.lazySnackbarIsOpen = true;
    //});

    public void Dispose()
    {
    }
}

