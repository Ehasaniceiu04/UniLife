@using Syncfusion.Blazor.Navigations
@inject Microsoft.AspNetCore.Components.NavigationManager UriHelper
@attribute [Authorize(Policy = Policies.IsAdmin)]
@inject HttpClient Http
@inject IMatToaster matToaster
@using Newtonsoft.Json
@using Semerkand.Shared.Dto.Definitions
@using Semerkand.CommonUI.Pages.Admin.OgrenciIslem.OgrenciIslemTabs.OgrencilerTabs
@using Syncfusion.Blazor.SplitButtons

    <ControlSection>
        <div class="row">
            <SfGrid AllowSorting="true" AllowFiltering="true" AllowPaging="true" DataSource="@OgrGridDtos">
                <GridTemplates>
                    <DetailTemplate>
                        @{
                            var ogrenciDto = (context as Semerkand.Shared.Dto.Definitions.OgrenciDto);
                        }
                        <div style="padding:20px">
                            <SfTab>
                                <TabItems>
                                    <TabItem>
                                        <ChildContent>
                                            <TabHeader Text="Details"></TabHeader>
                                        </ChildContent>
                                        <ContentTemplate>
                                            <OgrenciBilgi OgrenciDto="ogrenciDto"></OgrenciBilgi>
                                        </ContentTemplate>
                                    </TabItem>
                                    <TabItem>
                                        <ChildContent>
                                            <TabHeader Text="Sales"></TabHeader>
                                        </ChildContent>
                                        <ContentTemplate>
                                            Burada elemanlar bir tane daha grid koymuş. düşünülebilir.
                                        </ContentTemplate>
                                    </TabItem>
                                    <TabItem>
                                        <ChildContent>
                                            <TabHeader Text="Report"></TabHeader>
                                        </ChildContent>
                                        <ContentTemplate>
                                            Burada Chart vardı öğrencinin devamsızlık vs tutulabilir. Şekil şş
                                        </ContentTemplate>
                                    </TabItem>
                                </TabItems>
                            </SfTab>
                        </div>
                    </DetailTemplate>
                </GridTemplates>
                <GridColumns>
                    <GridColumn Visible="false" Field=@nameof(OgrenciDto.ApplicationUserId) HeaderText="AppUserId" AllowEditing="false" IsPrimaryKey="true" TextAlign="TextAlign.Left" Width="140"></GridColumn>
                    <GridColumn Field=@nameof(OgrenciDto.Ad) HeaderText="Ad" Width="110"> </GridColumn>
                    <GridColumn Field=@nameof(OgrenciDto.Soyad) HeaderText="Soyad" Width="110"></GridColumn>
                    <GridColumn Field=@nameof(OgrenciDto.TCKN) HeaderText="TCKN" Width="110"></GridColumn>
                    <GridColumn Field=@nameof(OgrenciDto.Email) HeaderText="Email"></GridColumn>
                    <GridColumn Field=@nameof(OgrenciDto.OgrNo) HeaderText="Öğrenci No" Width="110"></GridColumn>
                </GridColumns>
            </SfGrid>
        </div>

        <div class="row">
            <div class="col-12 text-right">
                <SfProgressButton OnClick="KaydetDevam" Content="Kaydet ve Devamet >" CssClass="center-block e-primary">
                    <ProgressButtonSpinSettings Position="SpinPosition.Right"></ProgressButtonSpinSettings>
                </SfProgressButton>
            </div>
        </div>



    </ControlSection>

@code{
    public List<OgrenciDto> OgrGridDtos { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await ReadOgrencis();
    }

    async Task ReadOgrencis()
    {

        ApiResponseDto<List<OgrenciDto>> apiResponse = await Http.GetFromJsonAsync<ApiResponseDto<List<OgrenciDto>>>($"api/Admin/GetOgrenciUsers?pageSize={10}&pageNumber={0}");

        if (apiResponse.StatusCode == Status200OK)
        {
            matToaster.Add(apiResponse.Message, MatToastType.Success, "Öğrenciler getirildi");
            OgrGridDtos = apiResponse.Result;
        }
        else
        {
            matToaster.Add(apiResponse.Message + " : " + apiResponse.StatusCode, MatToastType.Danger, "Öğrenci bilgisi getirilirken hata oluştu!");
        }
    }

    async Task KaydetDevam()
    {

    }

}



<style type="text/css" class="cssStyles">
    .photo {
        width: 100px;
        height: 100px;
        border-radius: 50px;
        box-shadow: inset 0 0 1px #e0e0e0, inset 0 0 14px rgba(0,0,0,0.2);
    }

    .title {
        font-size: medium;
        font-weight: 400;
    }

    .content {
        font-size: medium;
        color: #6c757d
    }

    .e-tab .e-content {
        overflow-y: hidden;
    }

    .e-tab .e-tab-header {
        border: 0;
    }
</style>