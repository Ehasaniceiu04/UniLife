@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Buttons
@using Semerkand.Shared.Dto.Definitions
@inject IMatToaster matToaster
@inject HttpClient Http;
@using Syncfusion.Blazor.SplitButtons
@inject AuthenticationStateProvider authStateProvider


    <EditForm Model=@_OgrenciDto OnSubmit="KaydetDevam">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <ControlSection>
            <div class="row info-panel">
                <div class="col-sm-12 col-md-12">
                    <div class="row">
                        <div class="col-sm-12 text-center">
                            <p>Akademik Bilgiler</p>
                        </div>
                    </div>
                    <div class="server-action-menu">
                        <div class="row">
                            <div class="col-sm-12 col-md-6">
                                <div class="form-row form-group form-inline ">
                                    <label class="col-sm-2" for="OgrNo">Öğrenci NO:</label>
                                    <SfTextBox @bind-Value="@_OgrenciDto.OgrNo" ID="OgrNo" CssClass="col-sm-4"></SfTextBox>
                                    <label class="col-sm-2" for="DosNo">Dosya NO:</label>
                                    <SfTextBox ID="DosNo" CssClass="col-sm-2"></SfTextBox>
                                    <SfCheckBox Label="Durum" CssClass="col-sm-1" Checked="@_OgrenciDto.Durum"></SfCheckBox>
                                    <label class="col-sm-2" for="TCKN">TCKN:</label>
                                    <SfTextBox @bind-Value="@_OgrenciDto.TCKN" ID="TCKN" CssClass="col-sm-4"></SfTextBox>
                                    <label class="col-sm-2" for="Seri">Kimlik Seri:</label>
                                    <SfTextBox ID="Seri" CssClass="col-sm-4"></SfTextBox>
                                    <label class="col-sm-2" for="Adi">Adı:</label>
                                    <SfTextBox @bind-Value="@_OgrenciDto.Ad" ID="Adı" CssClass="col-sm-4"></SfTextBox>
                                    <label class="col-sm-2" for="Soyadi">Soyadı:</label>
                                    <SfTextBox @bind-Value="@_OgrenciDto.Soyad" ID="Soyadi" CssClass="col-sm-4"></SfTextBox>
                                    <label class="col-sm-2" for="Email">Email:</label>
                                    <SfTextBox @bind-Value="@_OgrenciDto.Email" ID="Email" CssClass="col-sm-10"></SfTextBox>
                                    <label class="col-sm-2" for="DropFakulte">Fakulte:</label>
                                    <SfDropDownList ID="DropFakulte" @ref="DropFakulte" TItem="FakulteDto" CssClass="col-sm-10 pb-1"
                                                    TValue="int?" PopupHeight="230px" Index="2" Placeholder="Fakulte"
                                                    @bind-Value="@_OgrenciDto.FakulteId" DataSource="@fakulteDtos">
                                        <DropDownListEvents TValue="int?" ValueChange="FakulteToBolum"></DropDownListEvents>
                                        <DropDownListFieldSettings Text="Ad" Value="Id"></DropDownListFieldSettings>
                                    </SfDropDownList>
                                    <label class="col-sm-2" for="DropBolum">Bolum:</label>
                                    <SfDropDownList ID="DropBolum" @ref="DropBolum" TItem="BolumDto" CssClass="col-sm-10 pb-1"
                                                    TValue="int?" PopupHeight="230px" Index="2" Placeholder="Bölüm"
                                                    @bind-Value="@_OgrenciDto.BolumId" DataSource="@bolumDtos">
                                        <DropDownListEvents TValue="int?" ValueChange="BolumToProgram"></DropDownListEvents>
                                        <DropDownListFieldSettings Text="Ad" Value="Id"></DropDownListFieldSettings>
                                    </SfDropDownList>
                                    <label class="col-sm-2" for="DropProgram">Program:</label>
                                    <SfDropDownList ID="DropProgram" @ref="DropProgram" TItem="ProgramDto" CssClass="col-sm-10 pb-1"
                                                    TValue="int?" PopupHeight="230px" Index="2" Placeholder="Bölüm"
                                                    @bind-Value="@_OgrenciDto.ProgramId" DataSource="@programDtos">
                                        <DropDownListEvents TValue="int?" ValueChange="ProgramToMufredat"></DropDownListEvents>
                                        <DropDownListFieldSettings Text="Ad" Value="Id"></DropDownListFieldSettings>
                                    </SfDropDownList>
                                    <label class="col-sm-2" for="DropMufredat">Mufredat:</label>
                                    <SfDropDownList ID="DropMufredat" @ref="DropMufredat" TItem="MufredatDto" CssClass="col-sm-10 pb-1"
                                                    TValue="int?" PopupHeight="230px" Index="2" Placeholder="Bölüm"
                                                    @bind-Value="@_OgrenciDto.MufredatId" DataSource="@mufredatDtos">
                                        <DropDownListFieldSettings Text="Ad" Value="Id"></DropDownListFieldSettings>
                                    </SfDropDownList>
                                    <label class="col-sm-2" for="DropSinif">Sınıf:</label>
                                    <SfDropDownList ID="DropSinif" @ref="DropSinif" TItem="SinifDto" CssClass="col-sm-10 pb-1"
                                                    TValue="int?" PopupHeight="230px" Index="2" Placeholder="Bölüm"
                                                    @bind-Value="@_OgrenciDto.Sinif" DataSource="@sinifDtos">
                                        <DropDownListFieldSettings Text="Ad" Value="Id"></DropDownListFieldSettings>
                                    </SfDropDownList>
                                    <label class="col-sm-2" for="ilDonem">ilave Dönem:</label>
                                    <SfTextBox ID="ilDonem" Placeholder="ilave Dönem" CssClass="col-sm-3"></SfTextBox>

                                </div>

                            </div>
                            <div class="col-sm-12 col-md-6">
                                <div class="form-row form-group form-inline ">
                                    <label class="col-sm-2" for="DropKayitNeden">Kayıt Neden:</label>
                                    <SfDropDownList ID="DropKayitNeden" @ref="DropKayitNeden" TItem="KayitNedenDto" CssClass="col-sm-4 pb-1"
                                                    TValue="int?" PopupHeight="230px" Index="-1" Placeholder="Kayıt Neden"
                                                    @bind-Value="@_OgrenciDto.KayitNedenId" DataSource="@kayitNedenDtos">
                                        <DropDownListFieldSettings Text="Ad" Value="Id"></DropDownListFieldSettings>
                                    </SfDropDownList>
                                    <label class="col-sm-2" for="KayTarih">Kayıt Tarihi:</label>
                                    <SfDatePicker ID="KayTarih" TValue="DateTime?" CssClass="col-sm-4 pb-1" Placeholder="Kayıt Tarihi"></SfDatePicker>
                                    <label class="col-sm-2" for="ogrDurum">Öğrenim Durum:</label>
                                    <SfDropDownList ID="DropOgrenimDurum" @ref="DropOgrenimDurum" TItem="OgrenimDurumDto" CssClass="col-sm-4 pb-1"
                                                    TValue="int?" PopupHeight="230px" Index="2" Placeholder="Bölüm"
                                                    @bind-Value="@_OgrenciDto.OgrenimDurumId" DataSource="@ogrenimDurumDtos">
                                        <DropDownListFieldSettings Text="Ad" Value="Id"></DropDownListFieldSettings>
                                    </SfDropDownList>
                                    <label class="col-sm-2" for="AyrTarih">Ayrılma Tarihi:</label>
                                    <SfDatePicker ID="AyrTarih" TValue="DateTime?" CssClass="col-sm-4 pb-1" Placeholder="Ayrılma Tarihi"></SfDatePicker>

                                    <label class="col-sm-2" for="ogrentip">Öğrenim Tipi:</label>
                                    <SfDropDownList ID="ogrentip" TItem="GameFields" CssClass="col-sm-4 pb-1" TValue="string" PopupHeight="230px" Index="2" Placeholder="Öğrenim Durumu" @bind-Value="@DropVal" DataSource="@Games">
                                        <DropDownListEvents TValue="string" ValueChange="OnChange"></DropDownListEvents>
                                        <DropDownListFieldSettings Text="Text" Value="ID"></DropDownListFieldSettings>
                                    </SfDropDownList>
                                    <label class="col-sm-2" for="notsis">Not Sistemi:</label>
                                    <SfDropDownList ID="notsis" TItem="GameFields" CssClass="col-sm-4 pb-1" TValue="string" PopupHeight="230px" Index="2" Placeholder="Öğrenim Durumu" @bind-Value="@DropVal" DataSource="@Games">
                                        <DropDownListEvents TValue="string" ValueChange="OnChange"></DropDownListEvents>
                                        <DropDownListFieldSettings Text="Text" Value="ID"></DropDownListFieldSettings>
                                    </SfDropDownList>
                                    <label class="col-sm-2" for="ogrtip">Öğrenci Tipi:</label>
                                    <SfDropDownList ID="ogrtip" TItem="GameFields" CssClass="col-sm-4 pb-1" TValue="string" PopupHeight="230px" Index="2" Placeholder="Öğrenim Durumu" @bind-Value="@DropVal" DataSource="@Games">
                                        <DropDownListEvents TValue="string" ValueChange="OnChange"></DropDownListEvents>
                                        <DropDownListFieldSettings Text="Text" Value="ID"></DropDownListFieldSettings>
                                    </SfDropDownList>
                                    <label class="col-sm-2" for="orthestip">Ort. Hesap Tip:</label>
                                    <SfDropDownList ID="orthestip" TItem="GameFields" CssClass="col-sm-4 pb-1" TValue="string" PopupHeight="230px" Index="2" Placeholder="Öğrenim Durumu" @bind-Value="@DropVal" DataSource="@Games">
                                        <DropDownListEvents TValue="string" ValueChange="OnChange"></DropDownListEvents>
                                        <DropDownListFieldSettings Text="Text" Value="ID"></DropDownListFieldSettings>
                                    </SfDropDownList>
                                    <label class="col-sm-2" for="derskayislemtur">Ders Kayıt İşlem Türü:</label>
                                    <SfDropDownList ID="derskayislemtur" TItem="GameFields" CssClass="col-sm-4 pb-1" TValue="string" PopupHeight="230px" Index="2" Placeholder="Öğrenim Durumu" @bind-Value="@DropVal" DataSource="@Games">
                                        <DropDownListEvents TValue="string" ValueChange="OnChange"></DropDownListEvents>
                                        <DropDownListFieldSettings Text="Text" Value="ID"></DropDownListFieldSettings>
                                    </SfDropDownList>
                                    <label class="col-sm-2" for="anaProNeden">Ana Program Okuma Nedeni:</label>
                                    <SfDropDownList ID="anaProNeden" TItem="GameFields" CssClass="col-sm-4 pb-1" TValue="string" PopupHeight="230px" Index="2" Placeholder="Öğrenim Durumu" @bind-Value="@DropVal" DataSource="@Games">
                                        <DropDownListEvents TValue="string" ValueChange="OnChange"></DropDownListEvents>
                                        <DropDownListFieldSettings Text="Text" Value="ID"></DropDownListFieldSettings>
                                    </SfDropDownList>
                                    <label class="col-sm-2" for="danis">Danışmanı:</label>
                                    <SfTextBox ID="danis" CssClass="col-sm-4"></SfTextBox>
                                    <label class="col-sm-2" for="digDanisman">Diğer Danışman:</label>
                                    <SfTextBox ID="digDanisman" CssClass="col-sm-4"></SfTextBox>
                                    <label class="col-sm-2" for="capYan">Çap Yandal Durum:</label>
                                    <SfDropDownList ID="capYan" TItem="GameFields" CssClass="col-sm-4 pb-1" TValue="string" PopupHeight="230px" Index="2" Placeholder="Öğrenim Durumu" @bind-Value="@DropVal" DataSource="@Games">
                                        <DropDownListEvents TValue="string" ValueChange="OnChange"></DropDownListEvents>
                                        <DropDownListFieldSettings Text="Text" Value="ID"></DropDownListFieldSettings>
                                    </SfDropDownList>
                                </div>

                            </div>
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-12 text-right">
                            <SfProgressButton Content="Kaydet ve Devamet >" CssClass="center-block e-primary">
                                <ProgressButtonSpinSettings Position="SpinPosition.Right"></ProgressButtonSpinSettings>
                            </SfProgressButton>
                        </div>
                    </div>


                </div>
            </div>
        </ControlSection>

    </EditForm>




@code {

    private string textValue { get; set; }
    public class GameFields
    {
        public string ID { get; set; }
        public string Text { get; set; }
    }
    private List<GameFields> Games = new List<GameFields>() {
        new GameFields(){ ID= "Game1", Text= "American Football" },
        new GameFields(){ ID= "Game2", Text= "Badminton" },
        new GameFields(){ ID= "Game3", Text= "Basketball" },
        new GameFields(){ ID= "Game4", Text= "Cricket" },
        new GameFields(){ ID= "Game5", Text= "Football" },
        new GameFields(){ ID= "Game6", Text= "Golf" },
        new GameFields(){ ID= "Game7", Text= "Hockey" },
        new GameFields(){ ID= "Game8", Text= "Rugby"},
        new GameFields(){ ID= "Game9", Text= "Snooker" },
        new GameFields(){ ID= "Game10", Text= "Tennis"},
     };
    public string DropVal;
    public string ChangeValue { get; set; } = "Basketball";
    public void OnChange(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string> args)
    {
        var asd = args;
    }

    //Sonradan doldurulacak dropdownlar
    [Parameter]
    public OgrenciDto _OgrenciDto { get; set; } = new OgrenciDto();


    SfDropDownList<int?, FakulteDto> DropFakulte;
    SfDropDownList<int?, BolumDto> DropBolum;
    SfDropDownList<int?, ProgramDto> DropProgram;
    SfDropDownList<int?, MufredatDto> DropMufredat;
    SfDropDownList<int?, SinifDto> DropSinif;
    SfDropDownList<int?, KayitNedenDto> DropKayitNeden;
    SfDropDownList<int?, OgrenimDurumDto> DropOgrenimDurum;






    public bool ShowSelectAllCheckBox { get; set; } = false;
    public bool EnableSelectionOrders { get; set; } = false;
    public bool EnableDropDownIcon { get; set; } = true;

    List<FakulteDto> fakulteDtos = new List<FakulteDto>();
    List<BolumDto> bolumDtos = new List<BolumDto>();
    List<ProgramDto> programDtos = new List<ProgramDto>();
    List<MufredatDto> mufredatDtos = new List<MufredatDto>();
    List<KayitNedenDto> kayitNedenDtos = new List<KayitNedenDto>();
    List<OgrenimDurumDto> ogrenimDurumDtos = new List<OgrenimDurumDto>();

    List<SinifDto> sinifDtos = new List<SinifDto>
{
            new SinifDto() { Ad = "0", Id = 0 },
            new SinifDto() { Ad = "1", Id = 1 },
            new SinifDto() { Ad = "2", Id = 2 },
            new SinifDto() { Ad = "3", Id = 3 },
            new SinifDto() { Ad = "4", Id = 4 },
            new SinifDto() { Ad = "5", Id = 5 },
            new SinifDto() { Ad = "6", Id = 6 },
            new SinifDto() { Ad = "7", Id = 7 },
            new SinifDto() { Ad = "8", Id = 8 },
            new SinifDto() { Ad = "9", Id = 9 },
};



    protected override async Task OnInitializedAsync()
    {
        await ReadFakultes();
        await ReadKayitNedens();
        await ReadOgrenimDurums();
        _OgrenciDto.KayitNedenId = 1;

    }

    async Task ReadFakultes()
    {
        ApiResponseDto<List<FakulteDto>> apiResponse = await Http.GetFromJsonAsync<ApiResponseDto<List<FakulteDto>>>("api/fakulte");

        if (apiResponse.StatusCode == Status200OK)
        {
            fakulteDtos = apiResponse.Result;

        }
        else
        {
            matToaster.Add(apiResponse.Message + " : " + apiResponse.StatusCode, MatToastType.Danger, "fakulte getirilirken hata oluştu!");
        }
    }

    async Task ReadKayitNedens()
    {
        ApiResponseDto<List<KayitNedenDto>> apiResponse = await Http.GetFromJsonAsync<ApiResponseDto<List<KayitNedenDto>>>("api/KeyValues/GetKayitNeden");

        if (apiResponse.StatusCode == Status200OK)
        {
            kayitNedenDtos = apiResponse.Result;

        }
        else
        {
            matToaster.Add(apiResponse.Message + " : " + apiResponse.StatusCode, MatToastType.Danger, "Kayit neden getirilirken hata oluştu!");
        }
    }
    async Task ReadOgrenimDurums()
    {
        ApiResponseDto<List<OgrenimDurumDto>> apiResponse = await Http.GetFromJsonAsync<ApiResponseDto<List<OgrenimDurumDto>>>("api/ogrenimdurum");

        if (apiResponse.StatusCode == Status200OK)
        {
            ogrenimDurumDtos = apiResponse.Result;

        }
        else
        {
            matToaster.Add(apiResponse.Message + " : " + apiResponse.StatusCode, MatToastType.Danger, "Kayit neden getirilirken hata oluştu!");
        }
    }


    private async Task FakulteToBolum(Syncfusion.Blazor.DropDowns.ChangeEventArgs<int?> args)
    {
        if (args.Value == null)
        {
            bolumDtos = new List<BolumDto>();
            programDtos = new List<ProgramDto>();
            mufredatDtos = new List<MufredatDto>();
            StateHasChanged();
        }
        else
        {
            await ReadBolums();
        }
    }



    async Task ReadBolums()
    {
        ApiResponseDto<List<BolumDto>> apiResponse = await Http.GetFromJsonAsync<ApiResponseDto<List<BolumDto>>>("api/bolum/GetBolumByFakulteIds/" + string.Join(',', DropFakulte.Value));

        if (apiResponse.StatusCode == Status200OK)
        {
            bolumDtos = apiResponse.Result;
            StateHasChanged();
        }
        else
        {
            matToaster.Add(apiResponse.Message + " : " + apiResponse.StatusCode, MatToastType.Danger, "Bölüm getirilirken hata oluştu!");
        }
    }

    private async void BolumToProgram(Syncfusion.Blazor.DropDowns.ChangeEventArgs<int?> args)
    {

        if (args.Value == null)
        {
            programDtos = new List<ProgramDto>();
            mufredatDtos = new List<MufredatDto>();
            StateHasChanged();
        }
        else
        {
            await ReadPrograms();
        }
    }

    async Task ReadPrograms()
    {
        ApiResponseDto<List<ProgramDto>> apiResponse = await Http.GetFromJsonAsync<ApiResponseDto<List<ProgramDto>>>("api/program/GetProgramByBolumIds/" + string.Join(',', DropBolum.Value));

        if (apiResponse.StatusCode == Status200OK)
        {
            programDtos = apiResponse.Result;
            StateHasChanged();
        }
        else
        {
            matToaster.Add(apiResponse.Message + " : " + apiResponse.StatusCode, MatToastType.Danger, "program getirilirken hata oluştu!");
        }
    }

    private async void ProgramToMufredat(Syncfusion.Blazor.DropDowns.ChangeEventArgs<int?> args)
    {
        if (args.Value == null)
        {
            mufredatDtos = new List<MufredatDto>();
            StateHasChanged();
        }
        else
        {
            await ReadMufredats();
        }
    }

    async Task ReadMufredats()
    {
        ApiResponseDto<List<MufredatDto>> apiResponse = await Http.GetFromJsonAsync<ApiResponseDto<List<MufredatDto>>>("api/mufredat/GetMufredatByProgramIds/" + string.Join(',', DropProgram.Value));

        if (apiResponse.StatusCode == Status200OK)
        {
            mufredatDtos = apiResponse.Result;
            StateHasChanged();
        }
        else
        {
            matToaster.Add(apiResponse.Message + " : " + apiResponse.StatusCode, MatToastType.Danger, "mufredat getirilirken hata oluştu!");
        }
    }

    async Task KaydetDevam()
    {
        try
        {
            var apiResponse = await ((IdentityAuthenticationStateProvider)authStateProvider).Create(_OgrenciDto);
            if (apiResponse.IsSuccessStatusCode)
            {
                matToaster.Add(apiResponse.Message, MatToastType.Success);
                //_OgrenciDto = Newtonsoft.Json.JsonConvert.DeserializeObject<OgrenciDto>(apiResponse.Result.ToString());
                //userInfoDtos.Add(userInfoDto);
                //registerParameters = new RegisterDto(); //reset create user object after insert
                //createUserDialogOpen = false;
                //UserGrid.Refresh();
            }
            else
            {
                matToaster.Add(apiResponse.Message + " : " + apiResponse.StatusCode, MatToastType.Danger, "Öğrenci kullanıcısı oluşturulurken hata oluştu");
                //userInfoDtos.Remove(userInfoDto);
                //UserGrid.Refresh();
            }
        }
        catch (Exception ex)
        {
            matToaster.Add(ex.GetBaseException().Message, MatToastType.Danger, "Öğrenci kullanıcısı oluşturulurken hata oluştu");
        }

    }
}

<style>
    textarea.e-input,
    .e-float-input textarea,
    .e-float-input.e-control-wrapper textarea,
    .e-input-group textarea,
    .e-input-group.e-control-wrapper textarea {
        resize: none;
    }

    .server-action-menu {
        background-color: transparent;
        background-image: linear-gradient(to bottom, rgba(30, 87, 153, 0.2) 0%, rgba(125, 185, 232, 0) 100%);
        background-repeat: repeat;
        border-radius: 10px;
        padding: 5px;
    }


    /*Autocomplate start*/
    .content {
        max-width: 270px;
        margin: 25px 300px;
        padding-top: 55px;
    }

    .header {
        font-weight: 600;
        color: rgba(0, 0, 0, .54);
        height: 48px;
        padding: 15px 0 0 16px;
        font-size: 16px;
        background-color: #f5f5f5;
        font-family: "Segoe UI", "GeezaPro", "DejaVu Serif";
    }

    .fabric .header {
        background-color: #fff;
        border-bottom: 1px solid #ccc;
        color: #0078d7;
        font-weight: 400;
    }

    .bootstrap .header {
        background-color: #fff;
        border-bottom: 1px solid #ccc;
        color: #777;
        font-family: "Helvetica Neue", "Helvetica", "Arial", "sans-serif";
        font-weight: 400;
        font-size: 12px;
        line-height: 30px;
        height: 30px;
        padding: 0 0 0 24px;
    }

    .e-bigger.bootstrap .header {
        line-height: 44px;
        height: 44px;
        font-size: 13px;
    }

    .highcontrast .header {
        color: #fff;
        background-color: #000;
    }

    .bootstrap4 .header {
        color: #6c757d;
    }

    .bootstrap .info,
    .e-bigger.bootstrap .info {
        margin-left: 25px;
    }

    .bootstrap .job {
        opacity: .54;
        font-size: 14px;
        margin-top: -25px;
        margin-bottom: 20px;
    }

    .e-bigger.bootstrap .job {
        font-size: 15px;
        margin-top: -32px;
        margin-bottom: 17px;
    }

    .bootstrap .ename {
        font-size: 15px;
        margin-top: 20px;
        opacity: .87;
        padding: 3px 0 20px;
    }

    .e-bigger.bootstrap .ename {
        font-size: 16px;
        padding-bottom: 15px;
    }

    .bootstrap .empImage,
    .e-bigger.bootstrap .empImage {
        margin: 0px 10px 0 20px;
    }

    .bootstrap .value {
        margin-top: 3px;
        margin-left: 3px;
    }

    .e-bigger.bootstrap .value {
        margin-top: 5px;
        margin-left: 5px;
    }

    .bootstrap .name {
        padding: 9px 42px;
    }

    .e-bigger.bootstrap .name {
        padding: 12px 42px;
    }

    .info {
        margin-left: 34px;
    }

    .ename {
        display: block !important;
        opacity: .87;
        font-size: 16px;
        margin-top: 8px;
    }

    .name {
        padding: 5px 42px;
        opacity: .87;
        line-height: 1.063em;
    }

    .job {
        opacity: .54;
        font-size: 14px;
        margin-top: -15px;
        margin-bottom: 7px;
    }

    .empImage {
        margin: 6px 16px;
        float: left;
        width: 50px;
        height: 50px;
    }

    .value {
        border-radius: 50%;
        float: left;
        margin-top: 2px;
        margin-left: 2px;
    }

    .e-bigger:not(.bootstrap) .value {
        margin-top: 7px;
    }

    .e-bigger:not(.bootstrap) .name {
        padding: 11px 42px;
    }

    .template.e-popup .e-list-item * {
        display: block;
        text-indent: 0;
    }

    .e-bigger:not(.bootstrap) .template .e-dropdownbase .e-list-item {
        line-height: 42px;
        height: 80px;
    }

    .e-bigger:not(.bootstrap) .template.e-popup .empImage {
        margin: 10px 16px;
    }

    .bootstrap4 .template.e-popup .empImage {
        margin: 0px 16px;
    }

    .bootstrap4 .template.e-popup .job {
        margin-top: 0;
    }

    .e-bigger.bootstrap4 .template.e-popup .job {
        margin-top: -15px;
    }

    .template .e-dropdownbase.e-content {
        max-height: 200px !important;
    }
    /*Autocomplate end*/

</style>
