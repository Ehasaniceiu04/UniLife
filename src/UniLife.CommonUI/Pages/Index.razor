@page "/"

@using Syncfusion.Blazor.Calendars
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor

@using UniLife.CommonUI.Components.Grid.DataGrid
@*@inject Task<Settings> _getSettings*@

@inject HttpClient Http;


<h1>Örnek Gridimiz - CRUD</h1>
<p>
    Örnek Gridmiz, Örnek Gridmiz, Örnek Gridmiz, Örnek Gridmiz, Örnek Gridmiz, Örnek Gridmiz, Örnek Gridmiz,
</p>
<OdataOgrenci></OdataOgrenci>

@*<CultureChooser />*@

@code{


    [Inject]
    protected IJSRuntime JsRuntime { get; set; }



    //protected override async Task OnInitializedAsync()
    //{
    //    var settings = await _getSettings;
    //    asd = settings?.AllowMultiOneDerslikMultiReserv;
    //}



    //protected override async Task OnInitializedAsync()
    //{

    //    var Locale = await Http.GetJsonAsyncExtension<object>("tr.json");
    //    this.JsRuntime.Sf().LoadLocaleData(Locale).SetCulture("tr");



    //}


    //protected override async Task OnAfterRenderAsync(bool firstRender)
    //{
    //    if (firstRender)
    //    {
    //        var Locale = await Http.GetJsonAsyncExtension<object>("tr.json");
    //        this.JsRuntime.Sf().LoadLocaleData(Locale).SetCulture("tr");

    //        //this.JsRuntime.Sf().LoadLocaleData("tr.json").SetCulture("tr");
    //    }
    //}

    //protected override async Task OnAfterRenderAsync(bool firstRender)
    //{
    //    if (firstRender)
    //    {
    //        var Locale = await Http.GetJsonAsyncExtension<object>("tr.json");
    //        this.JsRuntime.Sf().LoadLocaleData(Locale).SetCulture("tr");

    //        //this.JsRuntime.Sf().LoadLocaleData("tr.json").SetCulture("tr");
    //        Settings settings = await Http.GetJsonAsyncExtension<Settings>("settings.json");
    //        asd = settings.AllowMultiOneDerslikMultiReserv;
    //    }
    //}


    bool lazySnackbarIsOpen = false;

    //await base.OnInitializedAsync();

    //await Task.Delay(TimeSpan.FromSeconds(3)).ContinueWith((_) =>
    //{
    //    this.lazySnackbarIsOpen = true;
    //});

    public void Dispose()
    {
    }
}

