@page "/ogrenci/bilgi"

@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Buttons
@using UniLife.Shared.Dto.Definitions
@inject IMatToaster matToaster
@inject HttpClient Http;
@using Syncfusion.Blazor.SplitButtons
@inject AuthenticationStateProvider authStateProvider
@using Syncfusion.Blazor.Calendars
@using System.IO;
@inject AppState appState
@inject IJSRuntime JSRuntime;
@attribute [Authorize(Roles = "Administrator,Personel,Ogrenci")]


@if (!isInitializingFinised)
{

    <LoadingBackground ShowLogoBox="true">
        <label>Bilgiler Yükleniyor...</label>
    </LoadingBackground>
}
else
{
    <div class="card">
        <div class="row info-panel">
            <div class="col-sm-12 col-md-12">
                @*<div class="row">
                        <div class="col-sm-12 text-center">
                            <p>Akademik Bilgiler</p>
                        </div>
                    </div>*@

                @*Model=@_OgrenciDto OnValidSubmit="Kaydet"*@
                <div class="row">
                    <div class="col-sm-12 col-md-6">
                        <div class="server-action-menu">
                            <div class="form-row form-group form-inline ">
                                <label class="col-sm-2" for="OgrNo">Öğrenci NO:</label>
                                <SfNumericTextBox @bind-Value="@ogrenciInfoDto.OgrNo" Enabled="false" ID="OgrNo" CssClass="col-sm-4"></SfNumericTextBox>
                                <SfCheckBox Enabled="false" Label="Durum" CssClass="col-sm-6" @bind-Checked="@ogrenciInfoDto.Durum"></SfCheckBox>
                                <label class="col-sm-2" for="TCKN">TCKN:</label>
                                <SfTextBox Enabled="false" @bind-Value="@ogrenciInfoDto.Tckn" ID="TCKN" CssClass="col-sm-4"></SfTextBox>
                                <label class="col-sm-2" for="Seri">Kimlik Seri:</label>
                                <SfTextBox Enabled="false" ID="Seri" CssClass="col-sm-4"></SfTextBox>
                                <label class="col-sm-2" for="Adi">Adı:</label>
                                <SfTextBox Enabled="false" @bind-Value="@ogrenciInfoDto.Ad" ID="Adı" CssClass="col-sm-4"></SfTextBox>
                                <label class="col-sm-2" for="Soyadi">Soyadı:</label>
                                <SfTextBox Enabled="false" @bind-Value="@ogrenciInfoDto.Soyad" ID="Soyadi" CssClass="col-sm-4"></SfTextBox>
                                <label class="col-sm-2" for="Email">Email:</label>
                                <SfTextBox Enabled="false" @bind-Value="@ogrenciInfoDto.Email" ID="Email" CssClass="col-sm-10"></SfTextBox>
                                <label class="col-sm-2" for="fakulte">Fakulte:</label>
                                <SfTextBox Enabled="false" @bind-Value="@ogrenciInfoDto.FakulteAd" ID="fakulte" CssClass="col-sm-10"></SfTextBox>
                                <label class="col-sm-2" for="bolum">Bolum:</label>
                                <SfTextBox Enabled="false" @bind-Value="@ogrenciInfoDto.BolumAd" ID="bolum" CssClass="col-sm-10"></SfTextBox>
                                <label class="col-sm-2" for="Program">Program:</label>
                                <SfTextBox Enabled="false" @bind-Value="@ogrenciInfoDto.ProgramAd" ID="Program" CssClass="col-sm-10"></SfTextBox>
                                <label class="col-sm-2" for="Mufredat">Mufredat:</label>
                                <SfTextBox Enabled="false" @bind-Value="@ogrenciInfoDto.MufredatAd" ID="Mufredat" CssClass="col-sm-10"></SfTextBox>
                                <label class="col-sm-2" for="Sinif">Sınıf:</label>
                                <SfNumericTextBox Enabled="false" @bind-Value="@ogrenciInfoDto.Sinif" ID="Sinif" CssClass="col-sm-10"></SfNumericTextBox>
                                <label class="col-sm-2" for="ilDonem">ilave Dönem:</label>
                                <SfTextBox Enabled="false" ID="ilDonem" Placeholder="ilave Dönem" CssClass="col-sm-3"></SfTextBox>

                            </div>

                        </div>
                    </div>
                    <div class="col-sm-12 col-md-6">
                        <div class="server-action-menu">
                            <div class="form-row form-group form-inline ">
                                <label class="col-sm-2" for="KayitNeden">Kayıt Neden:</label>
                                <SfTextBox Enabled="false" @bind-Value="@ogrenciInfoDto.KayitNedenAd" ID="KayitNeden" CssClass="col-sm-10"></SfTextBox>
                                <label class="col-sm-2" for="OgrenimDurum">Öğrenim Durum:</label>
                                <SfTextBox Enabled="false" @bind-Value="@ogrenciInfoDto.OgrenimDurumAd" ID="OgrenimDurum" CssClass="col-sm-10"></SfTextBox>
                                <label class="col-sm-2" for="KayTarih">Kayıt Tarihi:</label>
                                <SfDatePicker Enabled="false" ID="KayTarih" TValue="DateTime" @bind-Value="@ogrenciInfoDto.KayitTarih" CssClass="col-sm-4 pb-1" Placeholder="Kayıt Tarihi"></SfDatePicker>
                                <label class="col-sm-2" for="AyrTarih">Ayrılma Tarihi:</label>
                                <SfDatePicker Enabled="false" ID="AyrTarih" TValue="DateTime?" @bind-Value="@ogrenciInfoDto.AyrilTarih" CssClass="col-sm-4 pb-1" Placeholder="Ayrılma Tarihi"></SfDatePicker>


                                <label class="col-sm-2" for="danis">Danışmanı:</label>
                                <SfTextBox Enabled="false" ID="danis" Placeholder="ilave Dönem" CssClass="col-sm-4" Value="@(string.IsNullOrWhiteSpace(danismanAd) ?"Ekle": danismanAd)"></SfTextBox>


                                <label class="col-sm-2" for="capYan">Çap Yandal Durum:</label>
                                <SfTextBox Enabled="@(false)" CssClass="col-sm-4" Readonly="false"></SfTextBox>
                            </div>
                            <div class="form-row">
                                <SfTextBox Enabled="@(false)" Placeholder="Bilgi Notu" @bind-Value="@ogrenciInfoDto.BilgNot" CssClass="col-sm-12" Readonly="false" Multiline="true"></SfTextBox>
                            </div>


                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-12 col-md-6">
                        <div class="control_wrapper">
                            <div id="dropArea" style="height: auto; overflow: auto">
                                <p>Resim Ekleyiniz. maks: 1.5 MB</p>

                                <SfUploader ID="UploadFiles" AutoUpload="false" DropArea=".control-fluid" MinFileSize=1000 MaxFileSize=1500000 AllowedExtensions=".png,.jpeg,jpg">
                                    <UploaderEvents ValueChange="OnChangeUpload" OnRemove="onRemove"></UploaderEvents>
                                    @*<UploaderAsyncSettings SaveUrl="http://localhost:53414/services/api/uploadbox/Save" RemoveUrl="https://aspnetmvc.syncfusion.com/services/api/uploadbox/Remove"></UploaderAsyncSettings>*@
                                    <UploaderFiles>
                                        <UploaderUploadedFiles Name="@(_OgrenciDto.ApplicationUserId.ToString())" Size=12000 Type="png"></UploaderUploadedFiles>
                                    </UploaderFiles>
                                </SfUploader>

                            </div>
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-6">

                    </div>
                </div>


            </div>
        </div>
    </div>
}




@code {

    string danismanAd;


    //Sonradan doldurulacak dropdownlar
    [Parameter]
    public OgrenciDto _OgrenciDto { get; set; } = new OgrenciDto();



    public bool ShowSelectAllCheckBox { get; set; } = false;
    public bool EnableSelectionOrders { get; set; } = false;
    public bool EnableDropDownIcon { get; set; } = true;



    bool isInitializingFinised;

    OgrenciInfoDto ogrenciInfoDto = new OgrenciInfoDto();

    protected override async Task OnInitializedAsync()
    {
        danismanAd = "";
        _OgrenciDto = await appState.GetOgrenciState();

        await ReadOgrenciInfo();
    }

    async Task ReadOgrenciInfo()
    {
        ApiResponseDto<OgrenciInfoDto> apiResponse = await Http.GetFromJsonAsync<ApiResponseDto<OgrenciInfoDto>>("api/ogrenci/GetOgrInfos");

        if (apiResponse.StatusCode == Status200OK)
        {
            ogrenciInfoDto = apiResponse.Result;
            StateHasChanged();
        }
        else
        {
            matToaster.Add(apiResponse.Message + " : " + apiResponse.StatusCode, MatToastType.Danger, "Öğrencci bilgileri getirilirken hata oluştu!");
        }

        isInitializingFinised = true;
    }





    //eski upladın removu
    public void OnFileRemove(RemovingEventArgs args)
    {
        args.PostRawFile = false;
    }

    private void onRemove(RemovingEventArgs args)
    {
        args.PostRawFile = false;


        //BU gerçekten siliyor.
        //foreach (var removeFile in args.FilesData)
        //{
        //    var rootPath = @"../UniLife.CommonUI/wwwroot/images/ogrenci/";
        //    if (File.Exists(Path.Combine(rootPath, removeFile.Name)))
        //    {
        //        File.Delete(Path.Combine(rootPath, removeFile.Name));
        //    }
        //}
    }

    //Eski upladın metodu
    private void OnChangeUpload(UploadChangeEventArgs args)
    {
        foreach (var file in args.Files)
        {
            //var path = @"path" + file.FileInfo.Name;

            var path = @"../UniLife.CommonUI/wwwroot/images/ogrenci/" + _OgrenciDto.ApplicationUserId.ToString() + "." + file.FileInfo.Type;

            FileStream filestream = new FileStream(path, FileMode.Create, FileAccess.Write);
            file.Stream.WriteTo(filestream);
            filestream.Close();
            file.Stream.Close();
        }
    }

}

<style>


    textarea.e-input,
    .e-float-input textarea,
    .e-float-input.e-control-wrapper textarea,
    .e-input-group textarea,
    .e-input-group.e-control-wrapper textarea {
        resize: none;
    }

    .server-action-menu {
        background-color: transparent;
        background-image: linear-gradient(to bottom, rgba(30, 87, 153, 0.2) 0%, rgba(125, 185, 232, 0) 100%);
        background-repeat: repeat;
        border-radius: 10px;
        padding: 7px;
    }


    /*Autocomplate start*/
    .content {
        max-width: 270px;
        margin: 25px 300px;
        padding-top: 55px;
    }

    .header {
        font-weight: 600;
        color: rgba(0, 0, 0, .54);
        height: 48px;
        padding: 15px 0 0 16px;
        font-size: 16px;
        background-color: #f5f5f5;
        font-family: "Segoe UI", "GeezaPro", "DejaVu Serif";
    }

    .fabric .header {
        background-color: #fff;
        border-bottom: 1px solid #ccc;
        color: #0078d7;
        font-weight: 400;
    }

    .bootstrap .header {
        background-color: #fff;
        border-bottom: 1px solid #ccc;
        color: #777;
        font-family: "Helvetica Neue", "Helvetica", "Arial", "sans-serif";
        font-weight: 400;
        font-size: 12px;
        line-height: 30px;
        height: 30px;
        padding: 0 0 0 24px;
    }

    .e-bigger.bootstrap .header {
        line-height: 44px;
        height: 44px;
        font-size: 13px;
    }

    .highcontrast .header {
        color: #fff;
        background-color: #000;
    }

    .bootstrap4 .header {
        color: #6c757d;
    }

    .bootstrap .info,
    .e-bigger.bootstrap .info {
        margin-left: 25px;
    }

    .bootstrap .job {
        opacity: .54;
        font-size: 14px;
        margin-top: -25px;
        margin-bottom: 20px;
    }

    .e-bigger.bootstrap .job {
        font-size: 15px;
        margin-top: -32px;
        margin-bottom: 17px;
    }

    .bootstrap .ename {
        font-size: 15px;
        margin-top: 20px;
        opacity: .87;
        padding: 3px 0 20px;
    }

    .e-bigger.bootstrap .ename {
        font-size: 16px;
        padding-bottom: 15px;
    }

    .bootstrap .empImage,
    .e-bigger.bootstrap .empImage {
        margin: 0px 10px 0 20px;
    }

    .bootstrap .value {
        margin-top: 3px;
        margin-left: 3px;
    }

    .e-bigger.bootstrap .value {
        margin-top: 5px;
        margin-left: 5px;
    }

    .bootstrap .name {
        padding: 9px 42px;
    }

    .e-bigger.bootstrap .name {
        padding: 12px 42px;
    }

    .info {
        margin-left: 34px;
    }

    .ename {
        display: block !important;
        opacity: .87;
        font-size: 16px;
        margin-top: 8px;
    }

    .name {
        padding: 5px 42px;
        opacity: .87;
        line-height: 1.063em;
    }

    .job {
        opacity: .54;
        font-size: 14px;
        margin-top: -15px;
        margin-bottom: 7px;
    }

    .empImage {
        margin: 6px 16px;
        float: left;
        width: 50px;
        height: 50px;
    }

    .value {
        border-radius: 50%;
        float: left;
        margin-top: 2px;
        margin-left: 2px;
    }

    .e-bigger:not(.bootstrap) .value {
        margin-top: 7px;
    }

    .e-bigger:not(.bootstrap) .name {
        padding: 11px 42px;
    }

    .template.e-popup .e-list-item * {
        display: block;
        text-indent: 0;
    }

    .e-bigger:not(.bootstrap) .template .e-dropdownbase .e-list-item {
        line-height: 42px;
        height: 80px;
    }

    .e-bigger:not(.bootstrap) .template.e-popup .empImage {
        margin: 10px 16px;
    }

    .bootstrap4 .template.e-popup .empImage {
        margin: 0px 16px;
    }

    .bootstrap4 .template.e-popup .job {
        margin-top: 0;
    }

    .e-bigger.bootstrap4 .template.e-popup .job {
        margin-top: -15px;
    }

    .template .e-dropdownbase.e-content {
        max-height: 200px !important;
    }
    /*Autocomplate end*/

    .e-input-calendar::before {
        content: '\e901';
        font-family: e-icons;
        font-size: 13px;
    }


    /*FileUplaod*/
    .control_wrapper {
        width: 350px;
        margin: 0 auto;
    }

    @@media (min-width: 576px) {
        .form-inline label {
            justify-content: unset;
        }
    }
</style>
