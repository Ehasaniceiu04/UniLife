@page "/admin/personel_islem"
@using Syncfusion.Blazor.Navigations
@using UniLife.CommonUI.Pages.Admin.PersonelIslem.PersonelIslemTabs
@using UniLife.Shared.Dto.Definitions
@using Syncfusion.Blazor.Buttons
@attribute [Authorize(Roles = "Administrator,Personel")]

<div class="control-section e-tab-section">
    <SfTab @ref="Tab" CssClass="BlazorTab" LoadOn="ContentLoad.Dynamic">
        <TabEvents Created="TabCreate" Selecting="OnTabSelecting"></TabEvents>
        <TabItems>
            <TabItem Visible="@(!PersSelected)">
                <ChildContent>
                    <TabHeader Text="Personeller"></TabHeader>
                </ChildContent>
                <ContentTemplate>
                    <Personeller PersonelToBilgiler="PersonelToBilgiler"></Personeller>
                </ContentTemplate>
            </TabItem>
            <TabItem Visible="@(PersSelected)">
                <ChildContent>
                    <TabHeader Text="Bilgiler"></TabHeader>
                </ChildContent>
                <ContentTemplate>
                    <PersonelDuzenle BilgilerToPersonel="TabDegis" _PersonelDto="_PersonelDto"></PersonelDuzenle>
                </ContentTemplate>
            </TabItem>
        </TabItems>
    </SfTab>
</div>

@if (PersSelected)
{
    <SfButton IconCss="e-icons e-DoubleArrowLeft" Content="Farklı Personel Seç" EnableRtl="true" OnClick="@(() => { PersSelected = false; })" CssClass="e-flat col-sm-2 e-outline azkenar"></SfButton>
}


@code{

    bool PersSelected = false;

    SfTab Tab;
    public PersonelDto _PersonelDto { get; set; } = new PersonelDto();

    public void TabDegis(int tabIndex)
    {
        Tab.Select(tabIndex);
    }

    public void PersonelToBilgiler(PersonelDto personelDto)
    {
        _PersonelDto = personelDto;
        TabDegis(1);
        PersSelected = true;
    }

    public void TabCreate()
    {

    }

    public async void onDonemChange()
    {
        await Tab.Select(Tab.SelectedItem);
    }

    public void OnTabSelected(SelectEventArgs args)
    {
        if (args.Name == "Personeller")
        {
            PersSelected = false;
        }
    }
    public void OnTabSelecting(SelectingEventArgs args)
    {
        if (args.IsSwiped)
        {
            args.Cancel = true;
        }
    }
}




<style>
    /*.tab_content .e-content .e-item {
        font-size: 12px;
        padding: 10px;
        text-align: justify;
        background-color: red;
    }*/

    .e-tab .e-tab-header::before {
        border-color: #69e0f0;
        border-style: solid;
    }

    .e-tab .e-tab-header .e-toolbar-item.e-active {
        border: 1px solid #dee2e6;
        background-color: #69e0f0;
    }

    .e-tab .e-tab-header:not(.e-vertical) .e-toolbar-item.e-active {
        border-bottom: 1px solid #69e0f0;
    }
    .e-DoubleArrowLeft:before {
        content: '\e7ba';
        color: #12a37c;
    }
</style>