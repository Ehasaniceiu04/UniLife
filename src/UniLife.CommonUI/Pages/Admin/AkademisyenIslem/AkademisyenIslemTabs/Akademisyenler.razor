@using Syncfusion.Blazor.Navigations
@inject Microsoft.AspNetCore.Components.NavigationManager UriHelper
@attribute [Authorize(Roles = "Administrator,Personel")]
@inject HttpClient Http
@inject IMatToaster matToaster
@using UniLife.Shared.Dto.Definitions
@using UniLife.CommonUI.Pages.Admin.AkademisyenIslem.AkademisyenIslemTabs.AkademisyenlerTabs
@using Syncfusion.Blazor.SplitButtons
@inject AppState appState



<ControlSection>
    <SfGrid ID="OgrGrid" @ref="OgrGrid" AllowSorting="true" AllowFiltering="true" AllowPaging="true" DataSource="@AkaGridDtos">
        @*OnActionFailure="ActionFailureHandler" DetailDataBound="DetailDataBound"  OnActionBegin="ActionBeginHandler" DetailDataBound="DetailDataBound" RowDataBound="RowBound"*@
        <GridEvents TValue="AkademisyenDto" CommandClicked="CommandClickHandler" OnActionBegin="ActionBeginHandler" OnActionComplete="ActionCompletedHandler"></GridEvents>
        <GridPageSettings PageCount="5" PageSizes="new int[]{ 5, 10, 50, 100,10000}"></GridPageSettings>
        <GridFilterSettings Mode="FilterBarMode.Immediate" ImmediateModeDelay="300"></GridFilterSettings>
        <GridTemplates>
            <DetailTemplate>
                @{
                    var akademisyenDto = (context as UniLife.Shared.Dto.Definitions.AkademisyenDto);
                }
                <div style="padding:20px">
                    <SfTab LoadOn="ContentLoad.Demand">
                        <TabEvents Selecting="OnTabSelecting"></TabEvents>
                        <TabItems>
                            <TabItem>
                                <ChildContent>
                                    <TabHeader Text="Details"></TabHeader>
                                </ChildContent>
                                <ContentTemplate>
                                    <AkademisyenBilgi _AkademisyenDto="akademisyenDto"></AkademisyenBilgi>
                                </ContentTemplate>
                            </TabItem>
                            <TabItem>
                                <ChildContent>
                                    <TabHeader Text="Roles"></TabHeader>
                                </ChildContent>
                                <ContentTemplate>
                                    <AkademisyenRoles _AkademisyenDto="akademisyenDto"></AkademisyenRoles>
                                </ContentTemplate>
                            </TabItem>
                            <TabItem>
                                <ChildContent>
                                    <TabHeader Text="Report"></TabHeader>
                                </ChildContent>
                                <ContentTemplate>
                                </ContentTemplate>
                            </TabItem>
                        </TabItems>
                    </SfTab>
                </div>
            </DetailTemplate>
        </GridTemplates>
        <GridColumns>
            <GridColumn Visible="false" Field=@nameof(AkademisyenDto.ApplicationUserId) HeaderText="AppUserId" AllowEditing="false" IsPrimaryKey="true" TextAlign="TextAlign.Left"></GridColumn>
            <GridColumn Field=@nameof(AkademisyenDto.TCKN) HeaderText="TCKN">
                <Template>
                    @{
                        var akaInfo = (context as AkademisyenDto);
                        <div>
                                <div class="empimg" style="background-color: cornflowerblue;">
                                    <span class="e-userimg sf-icon-Male"></span>
                                    <span id="Emptext" style="padding-left:10px">@akaInfo.TCKN</span>
                                </div>
                        </div>
                    }
                </Template>
            </GridColumn>
            <GridColumn Field=@nameof(AkademisyenDto.Ad) HeaderText="Ad"> </GridColumn>
            <GridColumn Field=@nameof(AkademisyenDto.Soyad) HeaderText="Soyad"></GridColumn>
            <GridColumn Field=@nameof(AkademisyenDto.AkaNo) HeaderText="Akademisyen No"></GridColumn>
            <GridColumn Field=@nameof(OgrenciDto.Durum) HeaderText="Durum" FilterSettings="@(new FilterSettings { Type = Syncfusion.Blazor.Grids.FilterType.CheckBox })">
                <Template>
                    @{
                        var akaInfo = (context as AkademisyenDto);
                        if (akaInfo.Durum == true)
                        {
                            <div class="statustemp e-activecolor">
                                <span class="statustxt e-activecolor">Aktif</span>
                            </div>
                        }
                        else
                        {
                            <div class="statustemp e-inactivecolor">
                                <span class="statustxt e-inactivecolor">Pasif</span>
                            </div>
                        }
                    }
                </Template>
            </GridColumn>
            <GridColumn>
                <GridCommandColumns>
                    <GridCommandColumn Type="CommandButtonType.None" Title="Akademik Bilgiler" ButtonOption="@(new CommandButtonOptions() { IconCss = " e-icons e-DoubleArrowRight", CssClass="e-flat" })"></GridCommandColumn>
                </GridCommandColumns>
            </GridColumn>
        </GridColumns>
    </SfGrid>
    <div class="col-12 text-right">
        <SfProgressButton OnClick="AddNew" Content="Yeni Akademisyen Kaydı >" CssClass="center-block e-primary">
            <ProgressButtonSpinSettings Position="SpinPosition.Right"></ProgressButtonSpinSettings>
        </SfProgressButton>
    </div>


</ControlSection>

@code{


    public SfGrid<AkademisyenDto> OgrGrid;
    AkademisyenDto target;

    List<AkademisyenDto> AkaGridDtos = new List<AkademisyenDto>();

    public AkademisyenDto _AkademisyenDto { get; set; } = new AkademisyenDto();

    protected override void OnInitialized()
    {
        ReadAkademisyens();
    }

    void ReadAkademisyens()
    {
        ApiResponseDto<List<AkademisyenDto>> apiResponse = Http.GetFromJsonAsync<ApiResponseDto<List<AkademisyenDto>>>("api/akademisyen").Result;


        if (apiResponse.StatusCode == Status200OK)
        {
            matToaster.Add(apiResponse.Message, MatToastType.Success, "Akademisyenler getirildi");
            AkaGridDtos = apiResponse.Result;
        }
        else
        {
            matToaster.Add(apiResponse.Message + " : " + apiResponse.StatusCode, MatToastType.Danger, "Akademisyen bilgisi getirilirken hata oluştu!");
        }
    }



    public async void ActionCompletedHandler(ActionEventArgs<AkademisyenDto> args)
    {
        var FilterApplied = OgrGrid.FilterSettings.Columns; // to get filtered column details
                                                            //var GroupingApplied = OgrGrid.GroupSettings.Columns; // to get grouped column details
                                                            //var SortingApplied = OgrGrid.SortSettings.Columns; // to get sorted column details
                                                            //var Columns = await OgrGrid.GetColumns(); // to get columsn details like visibility and other properties

    }



    public void ActionBeginHandler(ActionEventArgs<AkademisyenDto> args)
    {

    }



    [Parameter]
    public EventCallback<AkademisyenDto> AkademisyenToBilgiler { get; set; }

    public void CommandClickHandler(CommandClickEventArgs<AkademisyenDto> args)
    {
        if (args.CommandColumn.Title == "Akademik Bilgiler")
        {
            _AkademisyenDto = args.RowData;
            appState.AkademisyenState = _AkademisyenDto;
            AkademisyenToBilgiler.InvokeAsync(_AkademisyenDto);

        }
    }


    async Task AddNew()
    {
        await AkademisyenToBilgiler.InvokeAsync(new AkademisyenDto());
    }
    public void OnTabSelecting(SelectingEventArgs args)
    {
        if (args.IsSwiped)
        {
            args.Cancel = true;
        }
    }

    //public async Task DetailDataBound(DetailDataBoundEventArgs<AkademisyenDto> args)
    //{
    //    if (target != null)
    //        await OgrGrid.DetailExpandCollapseRow(target);
    //    target = args.Data;
    //}
}



<style type="text/css" class="cssStyles">
    .photo {
        width: 100px;
        height: 100px;
        border-radius: 50px;
        box-shadow: inset 0 0 1px #e0e0e0, inset 0 0 14px rgba(0,0,0,0.2);
    }

    .title {
        font-size: medium;
        font-weight: 400;
    }

    .content {
        font-size: medium;
        color: #6c757d
    }

    .e-tab .e-content {
        overflow-y: hidden;
    }

    .e-tab .e-tab-header {
        border: 0;
    }

    .e-DoubleArrowRight:before {
        content: '\e7bb';
        color: #3ec9e8;
    }





    .visible {
        display: inline-block;
        font-size: 18px;
        color: rgba(0,0,0,1);
    }

    .loading {
        position: absolute;
        height: 92%;
        width: 100%;
        background-color: rgba(1,1,1,0.2);
        z-index: 10000;
        display: flex;
        align-items: center;
        padding-left: 44%;
    }


    .visible {
        display: inline-block;
        font-size: 18px;
        color: rgba(0,0,0,1);
    }

    .loading {
        position: absolute;
        height: 92%;
        width: 100%;
        background-color: rgba(1,1,1,0.2);
        z-index: 10000;
        display: flex;
        align-items: center;
        padding-left: 44%;
    }


    _:-ms-fullscreen, :root .highcontrast .e-userimg.sf-icon-Male::before,
    _:-ms-fullscreen, :root .highcontrast .e-userimg.sf-icon-FeMale::before {
        color: black;
    }

    .highcontrast .e-userimg.sf-icon-Male::before,
    .highcontrast .e-userimg.sf-icon-FeMale::before {
        color: black;
    }

    .bootstrap .empimg {
        background-color: #0078d6;
    }

    .bootstrap4 .empimg {
        background-color: #0078d6;
    }

    /*  #Emptext {
        top: -12px;
        left: 41px;
        position: relative;
    }*/

    .empimg {
        height: 27px;
        width: 29px;
        border-radius: 14px;
    }

    .e-grid.e-rtl #Emptext {
        top: -12px;
        left: -41px;
        position: relative;
    }

    .e-userimg.sf-icon-Male::before,
    .e-userimg.sf-icon-FeMale::before {
        font-size: 13px;
    }

    .e-userimg.sf-icon-Male, .e-userimg.sf-icon-FeMale {
        margin: 0px 8px;
        line-height: 26px;
        color: white;
        font-size: 13px;
    }

        .e-userimg.sf-icon-Male::before {
            content: '\e700';
        }

        .e-userimg.sf-icon-FeMale::before {
            content: '\e701';
        }

    .highcontrast .e-grid td.e-rowcell.e-selectionbackground.e-active {
        background-color: transparent;
        color: white;
    }

    .e-bigger .e-grid .statustxt {
        position: relative;
        top: -2px;
    }

    .rating .star {
        font-size: 132%;
        color: lightgrey;
    }

        .rating .star.checked {
            color: #ffa600;
        }

        .rating .star:before {
            content: '★';
        }

    td.e-rowcell.e-selectionbackground.e-active {
        background-color: transparent;
    }

    .e-image {
        height: 13px;
        width: 14px;
    }

    td.e-rowcell .statustxt.e-activecolor {
        color: #00cc00;
        position: relative;
        /*top: 9px;*/
    }

    td.e-rowcell .statustxt.e-inactivecolor {
        color: #e60000;
        position: relative;
        /*top: 9px;*/
    }

    .statustemp.e-inactivecolor {
        background-color: #ffd7cc;
        width: 64px;
    }

    .statustemp.e-activecolor {
        background-color: #ccffcc;
        width: 57px;
    }

    .statustxt.e-activecolor {
        color: #00cc00;
    }

    .statustxt.e-inactivecolor {
        color: #e60000;
    }

    .statustemp {
        position: relative;
        height: 19px;
        border-radius: 5px;
        text-align: center
    }

    .highcontrast #msg {
        color: #FFFFFF
    }

    #msg {
        font-family: "Segoe UI", "GeezaPro", "DejaVu Serif", sans-serif;
        font-size: 14px;
        font-weight: 400;
        opacity: 0.95;
        color: #333;
        float: right;
        margin-top: 3px;
    }

    @@media only screen and (max-width: 370px) {
        #msg {
            float: left;
            margin-top: 3px;
        }

        #Grid {
            margin-top: 36px;
        }
    }

    #samplecontainer {
        padding-top: 5px;
    }

    #myProgress {
        position: relative;
        height: 18px;
        width: 10em;
        text-align: left;
        background-color: white;
    }

    .highcontrast .e-grid #myProgress {
        background-color: black;
    }

    .e-dddata {
        padding-bottom: 10px;
    }

    #myBar {
        position: absolute;
        width: 10%;
        height: 100%;
        background-color: #00b300;
    }

        #myBar.progressdisable {
            background-color: #df2222;
        }

    #label {
        position: relative;
        left: 10px;
        line-height: 18px;
        font-size: 10px;
        color: white;
    }

    @@font-face {
        font-family: 'Grid control Font';
        src: url(data:application/x-font-ttf;charset=utf-8;base64,AAEAAAAKAIAAAwAgT1MvMj1tSfQAAAEoAAAAVmNtYXDnE+ddAAABkAAAADpnbHlmWm7FjgAAAdgAAAPkaGVhZBFF/fMAAADQAAAANmhoZWEIHwQFAAAArAAAACRobXR4EAAAAAAAAYAAAAAQbG9jYQKaAUgAAAHMAAAACm1heHABEACgAAABCAAAACBuYW1lmuAR1QAABbwAAAKdcG9zdHgFC7MAAAhcAAAAQgABAAAEAAAAAFwEAAAAAAADwgABAAAAAAAAAAAAAAAAAAAABAABAAAAAQAAJ9BcPl8PPPUACwQAAAAAANcy3IEAAAAA1zLcgQAAAAADwgP0AAAACAACAAAAAAAAAAEAAAAEAJQAAgAAAAAAAgAAAAoACgAAAP8AAAAAAAAAAQQAAZAABQAAAokCzAAAAI8CiQLMAAAB6wAyAQgAAAIABQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUGZFZABA5wDnAgQAAAAAXAQAAAAAAAABAAAAAAAABAAAAAQAAAAEAAAABAAAAAAAAAIAAAADAAAAFAADAAEAAAAUAAQAJgAAAAQABAABAADnAv//AADnAP//AAAAAQAEAAAAAQACAAMAAAAAAAAAqAFIAfIAAAABAAAAAAPBA/MAkwAAASMPDRUfBQ8FHw4VDxYhLxY1Pw8vAz8DLxcjDwUBhQEIEQoKCwoEBQMEAwIBAQEBAwQFBggGAwIBAQICBQcKDAUEBwUFBgYICAYHCQkUFxcXPRUUFBAODAoMCQQEAgIBA4QBBAQEBQsKCw0PEhQUFh0sFxcUCQkHBgoMCAgDAwIBDAsGBQUDAgECBAcKDgYDAgEBAQMDBAUGBwkJCwsODxAOEQoLDA0ODwwNDg8PDxAD2gQLCQwOEgoLDA0NDxAREhMUFhYYGgoMBwgICQoKCgoKCiEUFgoLCQkIBncICAcHDgwLCRUKCw0NDg0OFBIMCwoQDxYTCwwMEw4ODQ4NDAoJChALDA4HBwgIdwwTERULDQ0OCQsHCAkJCgsMDA0NNiMaGxsODQ0NDAsLCgkJBwYEBA4ICQMEAwIBAQECAwMFBQABAAAAAAPCA/QAjQAAAQ8VFRcVDwcVHwwPFCEvFTM/Cy8INy8aAegOGhgVExAODAoMCwcKCAUFBAcGAgUDAQEDBgkHBAMBAQICBAcTCgsMDBkjMgUGBwgJCQsligkJCQ8OCwoJCgUFBgOEBgoGCAkLDQ4RCQkKC3UlCgoJCAcGBSITEhEPGRUPDwYDAgEBAQEJAgUCAQEBAQECAwYGCgsLDAwMDA0RCwoRDwQDCA8QEBERA/MCBQcJCQoKCwsPERAOEA0ODh8hEC8vEycZGRggJQoICAcGBQUFBAYKBQMDAwQCAQ4LCgkIBwYQRgYGBw8PEBEQGA8THR0iEBAQERAPDgYGBgU7EAYHCAkKCw4BAgICBwYHCAYHBwcGBgYVCBYLCrUUFBMTER8bHRkRDwwLCAcIBAIDAQYDBggFBQIBAAIAAAAAA14D9AA/AJIAAAEPDy8PPw8fDgUVHwcJAT8HNS8dKwEPHQJ9AQIDBAUGCAgJCQoLDAwMDQ0MDAwLCgkJCAgGBQQDAgEBAgMEBQYICAkJCgsMDAwNDQwMDAsKCQkICAYFBAMC/iYBAwQHCAkLDAEnAScMCwkIBwQDAQICAwQFBQcHBwkJCgoLDAwMDg0PDg8QEBAREBIREhISEhESEBEQEBAPDg8NDgwMDAsKCgkJBwcHBQUEAwICApYNDAwMCwoJCQgIBgUEAwIBAQIDBAUGCAgJCQoLDAwMDQ0MDAwLCgkJCAgGBQQDAgEBAgMEBQYICAkJCgsMDAwiDg4bGhkZGBcW/lMBrRYXGBkZGhscExMSEhISEREREA8PDw4NDQ0LCwsJCQgIBgYFBAQCAgICBAQFBgYICAkJCwsLDQ0NDg8PDxARERESEhISEwAAAAAAABIA3gABAAAAAAAAAAEAAAABAAAAAAABABEAAQABAAAAAAACAAcAEgABAAAAAAADABEAGQABAAAAAAAEABEAKgABAAAAAAAFAAsAOwABAAAAAAAGABEARgABAAAAAAAKACwAVwABAAAAAAALABIAgwADAAEECQAAAAIAlQADAAEECQABACIAlwADAAEECQACAA4AuQADAAEECQADACIAxwADAAEECQAEACIA6QADAAEECQAFABYBCwADAAEECQAGACIBIQADAAEECQAKAFgBQwADAAEECQALACQBmyBHcmlkIGNvbnRyb2wgRm9udFJlZ3VsYXJHcmlkIGNvbnRyb2wgRm9udEdyaWQgY29udHJvbCBGb250VmVyc2lvbiAxLjBHcmlkIGNvbnRyb2wgRm9udEZvbnQgZ2VuZXJhdGVkIHVzaW5nIFN5bmNmdXNpb24gTWV0cm8gU3R1ZGlvd3d3LnN5bmNmdXNpb24uY29tACAARwByAGkAZAAgAGMAbwBuAHQAcgBvAGwAIABGAG8AbgB0AFIAZQBnAHUAbABhAHIARwByAGkAZAAgAGMAbwBuAHQAcgBvAGwAIABGAG8AbgB0AEcAcgBpAGQAIABjAG8AbgB0AHIAbwBsACAARgBvAG4AdABWAGUAcgBzAGkAbwBuACAAMQAuADAARwByAGkAZAAgAGMAbwBuAHQAcgBvAGwAIABGAG8AbgB0AEYAbwBuAHQAIABnAGUAbgBlAHIAYQB0AGUAZAAgAHUAcwBpAG4AZwAgAFMAeQBuAGMAZgB1AHMAaQBvAG4AIABNAGUAdAByAG8AIABTAHQAdQBkAGkAbwB3AHcAdwAuAHMAeQBuAGMAZgB1AHMAaQBvAG4ALgBjAG8AbQAAAAACAAAAAAAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQBAgEDAQQBBQAETWFsZQZGZW1hbGUITG9jYXRpb24AAAAA) format('truetype');
        font-weight: normal;
        font-style: normal;
    }

    [class^="sf-icon-"], [class*=" sf-icon-"] {
        font-family: 'Grid control Font' !important;
        speak: none;
        font-size: 55px;
        font-style: normal;
        font-weight: normal;
        font-variant: normal;
        text-transform: none;
        line-height: 1;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
    }

    .e-accordion .e-acrdn-item .e-acrdn-header {
        background-color: lightcyan;
    }
</style>