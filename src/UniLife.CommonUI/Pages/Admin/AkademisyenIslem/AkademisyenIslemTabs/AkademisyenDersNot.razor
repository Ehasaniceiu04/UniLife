@using Syncfusion.Blazor.Navigations
@using UniLife.CommonUI.Pages.Akademisyen.AkaDersNotlarTab
@using UniLife.Shared.Dto.Definitions

@attribute [Authorize(Roles = "Administrator,Personel,Akademisyen")]
@*sınavları listeleyecez
    seçilen sınavın öğrencilerini açacak notlar girilecek.*@
<br />
<div class="control-section e-tab-section">
    <SfTab @ref="DersNotTab" LoadOn="ContentLoad.Demand">
        @*Selected="OnTabSelected" Selecting="OnTabSelecting"*@
        <TabEvents Created="TabCreate" Selecting="OnTabSelecting"></TabEvents>
        <TabItems>
            <TabItem CssClass="altTab">
                <ChildContent>
                    <TabHeader Text="Akademisyenin Verdiği Dersler"></TabHeader>
                </ChildContent>
                <ContentTemplate>
                    <AkaDersler SpesificDersAcilan="SpesificDersAcilan" SinavToNotlar="SinavToNotlar" _AkademisyenDto="_AkademisyenDto"></AkaDersler>
                </ContentTemplate>
            </TabItem>
            <TabItem  CssClass="altTab">
                <ChildContent>
                    <TabHeader Text="Seçilen Sınavın Öğrenci Notları"></TabHeader>
                </ChildContent>
                <ContentTemplate>
                    @if (forReRender)
                    {
                        <AkaNotlar _SinavDto="_SinavDto" _DersAcilanDto="_DersAcilanDto"></AkaNotlar>
                    }
                    else
                    {
                        <AkaNotlar _SinavDto="_SinavDto" _DersAcilanDto="_DersAcilanDto"></AkaNotlar>
                    }
                </ContentTemplate>
            </TabItem>
        </TabItems>
    </SfTab>
</div>

@code{

    bool forReRender;

    SfTab DersNotTab;

    [Parameter]
    public int SpesificDersAcilan { get; set; } = 0;

    [Parameter]
    public AkademisyenDto _AkademisyenDto { get; set; } = new AkademisyenDto();

    SinavDto _SinavDto;

    //int _dersAcilanId;
    DersAcilanDto _DersAcilanDto;

    public void TabCreate()
    {
        DersNotTab.EnableTab(0, true);
        DersNotTab.EnableTab(1, false);
    }
    public void OnTabSelecting(SelectingEventArgs args)
    {
        if (args.IsSwiped)
        {
            args.Cancel = true;
        }
        if (args.SelectedIndex == 0)
        {
            DersNotTab.EnableTab(1, false);
        }
        if (args.SelectedIndex == 0)
        {
            forReRender = !forReRender;
        }
    }

    //public void SinavToNotlar(AkademisyenSinavDto AkademisyenSinavDto)
    //{
    //    _AkademisyenSinavDto = AkademisyenSinavDto;
    //    TabDegis(1);
    //}

    //public void DerslerToOgrNotlar(DersAcilanDto dersAcilanDto)
    //{
    //    _dersAcilanDto = dersAcilanDto;
    //    TabDegis(1);
    //}

    public void SinavToNotlar(SinavDersAcilanDto sinavDersAcilanDto)
    {
        _SinavDto = sinavDersAcilanDto.SinavDto;
        _DersAcilanDto = sinavDersAcilanDto.DersAcilanDto;
        TabDegis(1);
    }




    public void TabDegis(int tabIndex)
    {
        DersNotTab.EnableTab(0, true);
        DersNotTab.EnableTab(1, tabIndex > 0);
        DersNotTab.Select(tabIndex);
    }
}

<style>
    .altTab.e-active {
        background-color: #69f0b8bd !important;
    }
    
</style>