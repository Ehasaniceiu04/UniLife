@using Syncfusion.Blazor.Navigations
@inject Microsoft.AspNetCore.Components.NavigationManager UriHelper
@inject HttpClient Http
@inject IMatToaster matToaster
@using UniLife.Shared.Dto.Definitions
@using UniLife.CommonUI.Pages.Admin.OgrenciIslem.OgrenciIslemTabs.OgrencilerTabs
@using Syncfusion.Blazor.SplitButtons
@using Syncfusion.Blazor.Data;
@inject AppState appState
@inject IJSRuntime Runtime
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Calendars

@attribute [Authorize(Roles = "Administrator,Personel")]
@*@if (OgrGridDtos == null)
    {

        <LoadingBackground ShowLogoBox="true">
            <label>Öğrenciler Yükleniyor...</label>
        </LoadingBackground>
    }
    else
    {*@
<div class="control_wrapper accordion-control-section">
    <SfAccordion>
        <AccordionItems>
            <AccordionEvents Expanding="ExpandingHandler" Clicked="OnclickHandler"> </AccordionEvents>
            <AccordionItem Header="Detaylı Filtreleme" IconCss="e-acrdn-icons" Expanded="@ExFilterOpen">
                <ContentTemplate>
                    <div class="row">
                        <div class="col-sm-6">
                            <FakBolPrg @bind-ProgramId="programId"
                                       @bind-BolumId="bolumId"
                                       @bind-FakulteId="fakulteId"
                                       @bind-MufredatId="mufredatId"
                                       ProgramShow="true"
                                       MufredatShow="true"
                                       ProgramPlaceHolder=" "></FakBolPrg>
                            <div class="form-group row">
                                <label for="KayitTarih" class="col-sm-2 col-form-label-sm">Kayıt Tarih</label>
                                <div class="col-sm-10">
                                    <SfDateRangePicker ID="KayitTarih" @bind-StartDate="@StartValue" @bind-EndDate="@EndValue">
                                        @*<DateRangePickerEvents ValueChange="ValueChangeHandler"></DateRangePickerEvents>*@
                                    </SfDateRangePicker>
                                </div>
                            </div>
                            <div class="form-group row">
                                <label for="AyrilTarih" class="col-sm-2 col-form-label-sm">Ayrılış Tarih</label>
                                <div class="col-sm-10">
                                    <SfDateRangePicker ID="AyrilTarih" @bind-StartDate="@StartValueAyril" @bind-EndDate="@EndValueAyril">
                                        @*<DateRangePickerEvents ValueChange="@onChange"></DateRangePickerEvents>*@
                                    </SfDateRangePicker>
                                </div>
                            </div>
                        </div>

                        <div class="col-sm-6">
                            <div class="form-group row">
                                <label for="DropMufredat" class="col-sm-3 col-form-label-sm">Kayit Neden</label>
                                <div class="col-sm-9">
                                    <SfDropDownList @ref="DropKNe" ShowClearButton="true" TValue="int?" TItem="KeyValueDto"
                                                    Query="@AdIdQuery"
                                                    @bind-Value="@kayitNedenId">
                                        <SfDataManager Url="odata/kayitnedens" Adaptor="Syncfusion.Blazor.Adaptors.ODataV4Adaptor" CrossDomain=true></SfDataManager>
                                        <DropDownListFieldSettings Text="Ad" Value="Id"></DropDownListFieldSettings>
                                    </SfDropDownList>
                                </div>
                            </div>
                            <div class="form-group row">
                                <label for="DropMufredat" class="col-sm-3 col-form-label-sm">Öğr. Durumu</label>
                                <div class="col-sm-9">
                                    <SfDropDownList @ref="DropOgrDurum" ShowClearButton="true" TValue="int?" TItem="KeyValueDto"
                                                    Query="@AdIdQuery"
                                                    @bind-Value="@ogrenimDurumId">
                                        <SfDataManager Url="odata/OgrenimDurums" Adaptor="Syncfusion.Blazor.Adaptors.ODataV4Adaptor" CrossDomain=true></SfDataManager>
                                        <DropDownListFieldSettings Text="Ad" Value="Id"></DropDownListFieldSettings>
                                    </SfDropDownList>
                                </div>
                            </div>
                            <div class="form-group row">
                                <label for="DropMufredat" class="col-sm-3 col-form-label-sm">Öğr. Türü</label>
                                <div class="col-sm-9">
                                    <SfDropDownList @ref="DropOgrTur" ShowClearButton="true" TValue="int?" TItem="KeyValueDto"
                                                    Query="@AdIdQuery"
                                                    @bind-Value="@ogrenimTurId">
                                        <SfDataManager Url="odata/ogrenimturs" Adaptor="Syncfusion.Blazor.Adaptors.ODataV4Adaptor" CrossDomain=true></SfDataManager>
                                        <DropDownListFieldSettings Text="Ad" Value="Id"></DropDownListFieldSettings>
                                    </SfDropDownList>
                                </div>
                            </div>

                            <SfButton OnClick="Refresh" CssClass="e-success col-sm-12 form-control-sm">Bul / Yenile</SfButton>

                        </div>
                    </div>
                </ContentTemplate>

            </AccordionItem>
        </AccordionItems>
    </SfAccordion>
</div>


<SfGrid ID="OgrGrid" @ref="OgrGrid" Query="@totalQuery" TValue="OgrenciDto" AllowSorting="true" AllowFiltering="true" AllowPaging="true" AllowSelection="false">
    @*OnActionFailure="ActionFailureHandler" DetailDataBound="DetailDataBound"  OnActionBegin="ActionBeginHandler" DetailDataBound="DetailDataBound" RowDataBound="RowBound"*@
    <SfDataManager Url="@OdataQuery" Adaptor="Adaptors.ODataV4Adaptor"></SfDataManager>
    <GridEvents TValue="OgrenciDto" DetailDataBound="DetailDataBound" DataBound="DataBound" OnActionBegin="ActionBeginHandler" OnActionComplete="ActionCompletedHandler"></GridEvents>
    <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.FilterBar"></GridFilterSettings>
    <GridPageSettings PageCount="5" PageSizes="new int[]{ 5, 10, 50, 100,10000}"></GridPageSettings>
    <GridFilterSettings Mode="FilterBarMode.Immediate" ImmediateModeDelay="300"></GridFilterSettings>
    <GridTemplates>
        <DetailTemplate>
            @{
                var ogrenciInfo = (context as OgrenciDto);

            }
            <div class="col-3 float-right">
                <SfButton OnClick="@(()=>DeepDetail(ogrenciInfo))" IconCss="e-icons e-DoubleArrowRight" CssClass="col-sm-12 form-control-sm">Öğrenci Detay</SfButton>
            </div>
            <div style="padding:20px">

                <SfTab LoadOn="ContentLoad.Demand">
                    <TabEvents Selecting="OnTabSelecting"></TabEvents>
                    <TabItems>
                        <TabItem>
                            <ChildContent>
                                <TabHeader Text="Detay"></TabHeader>
                            </ChildContent>
                            <ContentTemplate>
                                <OgrenciBilgi ogrenciId="ogrenciInfo.Id"></OgrenciBilgi>
                            </ContentTemplate>
                        </TabItem>
                        <TabItem>
                            <ChildContent>
                                <TabHeader Text="İletişim Bilgileri"></TabHeader>
                            </ChildContent>
                            <ContentTemplate>
                                <OgrenciIletisim _OgrenciDto="ogrenciInfo"></OgrenciIletisim>
                            </ContentTemplate>
                        </TabItem>
                        <TabItem>
                            <ChildContent>
                                <TabHeader Text="Roller"></TabHeader>
                            </ChildContent>
                            <ContentTemplate>
                                <div @onkeydown:stopPropagation="true">
                                    <OgrenciRoles _OgrenciDto="ogrenciInfo"></OgrenciRoles>
                                </div>
                            </ContentTemplate>
                        </TabItem>
                    </TabItems>
                </SfTab>


            </div>
        </DetailTemplate>
    </GridTemplates>
    <GridColumns>
        <GridColumn Visible="false" Field=@nameof(OgrenciDto.ApplicationUserId) AllowEditing="false" IsPrimaryKey="true" TextAlign="TextAlign.Left"></GridColumn>
        <GridColumn Field=@nameof(OgrenciDto.TCKN) HeaderText="TCKN">
            <Template>
                @{
                    var ogrenciInfo = (context as OgrenciDto);
                    <div>
                        @if (ogrenciInfo.IsMale == true)
                        {
                            <div class="empimg" style="background-color: cornflowerblue;">
                                <span class="e-userimg sf-icon-Male"></span>
                                <span id="Emptext" style="padding-left:10px">@ogrenciInfo.TCKN</span>
                            </div>
                        }
                        @if (ogrenciInfo.IsMale == false)
                        {
                            <div class="empimg" style="background-color: pink;">
                                <span class="e-userimg sf-icon-FeMale"></span>
                                <span id="Emptext" style="padding-left:10px">@ogrenciInfo.TCKN</span>
                            </div>
                        }

                    </div>
                }
            </Template>
        </GridColumn>
        <GridColumn Field=@nameof(OgrenciDto.OgrNo) HeaderText="Öğrenci No" FilterSettings="@(new FilterSettings{ Operator = Operator.StartsWith })"></GridColumn>
        <GridColumn Field=@nameof(OgrenciDto.Ad) HeaderText="Ad" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })"> </GridColumn>
        <GridColumn Field=@nameof(OgrenciDto.Soyad) HeaderText="Soyad" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })"></GridColumn>
        <GridColumn Field="Program.Ad" HeaderText="Program" Visible="@(isAccordExpanded)" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })"></GridColumn>
        <GridColumn Field="Fakulte.Ad" HeaderText="Fakulte" Visible="@(isAccordExpanded)" FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })"></GridColumn>
        <GridColumn Field=@nameof(OgrenciDto.Durum) HeaderText="Durum" FilterSettings="@(new FilterSettings { Type = Syncfusion.Blazor.Grids.FilterType.CheckBox })">
            <Template>
                @{
                    var ogrenciInfo = (context as OgrenciDto);
                    if (ogrenciInfo.Durum == true)
                    {
                        <div class="statustemp e-activecolor">
                            <span class="statustxt e-activecolor">Aktif</span>
                        </div>
                    }
                    else
                    {
                        <div class="statustemp e-inactivecolor">
                            <span class="statustxt e-inactivecolor">Pasif</span>
                        </div>
                    }
                }
            </Template>
        </GridColumn>
        <GridColumn Field=@nameof(OgrenciDto.Sinif) HeaderText="Sınıf"></GridColumn>
        @*<GridColumn Field=@nameof(OgrenciDto.KayitTarih) Format="d" Type="ColumnType.Date" HeaderText="KayitTarih"></GridColumn>*@
        @*<GridColumn>
                <GridCommandColumns>
                    <GridCommandColumn Type="CommandButtonType.None" Title="Akademik Bilgiler" ButtonOption="@(new CommandButtonOptions() { IconCss = " e-icons e-DoubleArrowRight", CssClass="e-flat" , Content="Öğr. Detay" })"></GridCommandColumn>
                </GridCommandColumns>
            </GridColumn>*@
    </GridColumns>
</SfGrid>
@*}*@



<div class="col-12 text-right">
    <SfProgressButton OnClick="AddNew" Content="Yeni Öğrenci Kaydı >" CssClass="center-block e-primary">
        <ProgressButtonSpinSettings Position="SpinPosition.Right"></ProgressButtonSpinSettings>
    </SfProgressButton>
</div>



@code{


    public SfGrid<OgrenciDto> OgrGrid;
    OgrenciDto target;


    //List<OgrenciDto> OgrGridDtos;// = new List<OgrenciDto>();

    public OgrenciDto _OgrenciDto { get; set; } = new OgrenciDto();

    string OdataQuery = "odata/ogrencis";
    //public Query totalQuery = new Query().Expand(new List<string> { "program($select=Id,Ad)", "Danisman($select=Id,Ad)", "Bolum($select=Id,Ad)", "Fakulte($select=Id,Ad)" });
    public Query totalQuery = new Query();


    bool ExFilterOpen;

    int? programId;
    int? bolumId;
    int? fakulteId;
    int? mufredatId;
    int? kayitNedenId;
    int? ogrenimDurumId;
    int? ogrenimTurId;

    SfDropDownList<int?, KeyValueDto> DropMufredat;
    public Query AdIdQuery = new Query().Select(new List<string> { "Id", "Ad" }).RequiresCount();

    SfDropDownList<int?, KeyValueDto> DropKNe;
    SfDropDownList<int?, KeyValueDto> DropOgrDurum;
    SfDropDownList<int?, KeyValueDto> DropOgrTur;


    public DateTime? StartValue { get; set; }
    public DateTime? EndValue { get; set; }

    public DateTime? StartValueAyril { get; set; }
    public DateTime? EndValueAyril { get; set; }

    protected override async Task OnInitializedAsync()
    {
        //await ReadOgrencis();
    }

    //async Task ReadOgrencis()
    //{
    //    //ApiResponseDto<List<OgrenciDto>> apiResponse = await Http.GetFromJsonAsync<ApiResponseDto<List<OgrenciDto>>>($"api/Admin/GetOgrenciUsers?pageSize={10}&pageNumber={0}");
    //    try
    //    {
    //        ApiResponseDto<List<OgrenciDto>> apiResponse = await Http.GetFromJsonAsync<ApiResponseDto<List<OgrenciDto>>>("api/ogrenci");
    //        if (apiResponse.IsSuccessStatusCode)
    //        {
    //            OgrGridDtos = apiResponse.Result;
    //            matToaster.Add(apiResponse.Message, MatToastType.Success, "Öğrenciler getirildi.");
    //        }
    //        else
    //            matToaster.Add(apiResponse.Message, MatToastType.Danger, "Hata oluştu!");
    //    }
    //    catch (Exception ex)
    //    {
    //        matToaster.Add(ex.GetBaseException().Message, MatToastType.Danger, "Hata oluştu!");
    //    }

    //}



    public async void ActionCompletedHandler(ActionEventArgs<OgrenciDto> args)
    {
        var FilterApplied = OgrGrid.FilterSettings.Columns;
    }

    public void ActionBeginHandler(ActionEventArgs<OgrenciDto> args)
    {

    }

    //public async Task DetailDataBound(DetailDataBoundEventArgs<OgrenciDto> args)
    //{
    //    if (target != null)
    //        await OgrGrid.DetailExpandCollapseRow(target);
    //    target = args.Data;
    //}



    [Parameter]
    public EventCallback<OgrenciDto> OgrenciToAkademik { get; set; }

    //public void CommandClickHandler(CommandClickEventArgs<OgrenciDto> args)
    //{
    //    if (args.CommandColumn.Title == "Akademik Bilgiler")
    //    {
    //        _OgrenciDto = args.RowData;
    //        appState.OgrenciState = _OgrenciDto;
    //        OgrenciToAkademik.InvokeAsync(_OgrenciDto);

    //    }
    //}

    async Task DeepDetail(OgrenciDto ogrenciDto)
    {
        ApiResponseDto<FakulteDto> apiResponse = await Http.GetFromJsonAsync<ApiResponseDto<FakulteDto>>($"api/fakulte/{ogrenciDto.FakulteId}");

        _OgrenciDto = ogrenciDto;
        _OgrenciDto.Fakulte = apiResponse.Result;
        appState.OgrenciState = _OgrenciDto;
        await OgrenciToAkademik.InvokeAsync(_OgrenciDto);
    }




    async Task AddNew()
    {
        appState.OgrenciState = new OgrenciDto();
        appState.OgrenciTempState = new OgrenciDto();
        await OgrenciToAkademik.InvokeAsync(new OgrenciDto());
    }
    public void OnTabSelecting(SelectingEventArgs args)
    {
        if (args.IsSwiped)
        {
            args.Cancel = true;
        }
    }


    public bool firstrender { get; set; } = true;
    public async Task DataBound()
    {
        if (firstrender)
        {
            var dotNetReference = DotNetObjectReference.Create(this);           // create dotnet ref
            await Runtime.InvokeAsync<string>("detail", dotNetReference);       // send the dotnet ref to JS side
            firstrender = false;
        }
    }
    public async Task DetailDataBound(DetailDataBoundEventArgs<OgrenciDto> args)
    {
        if (target != null)
        {
            if (target == args.Data)              // return when target is equal to args.data
            {
                return;
            }
            await OgrGrid.DetailExpandCollapseRow(target);
        }
        target = args.Data;
    }

    [JSInvokable("DetailCollapse")]              // method called from JS when collapse is done
    public void DetailRowCollapse()
    {
        target = null;                   // empty the target when collapse action is done
    }

    async Task Refresh()
    {
        totalQuery = new Query();
        //totalQuery.Expand(new List<string> { "program($select=Id,Ad)", "Danisman($select=Id,Ad)", "Bolum($select=Id,Ad)", "Fakulte($select=Id,Ad)" });
        totalQuery.Expand(new List<string> { "program($select=Id,Ad)", "Fakulte($select=Id,Ad)" });

        //TODO
        //Çoklu fakülte seçim yapılırsa Bu alttaki gibi birden fazla Predicate tanımlanıp request atılabilir! IYI fikir.

        if (StartValue.HasValue && EndValue.HasValue)
        {
            var ColPre = new WhereFilter();
            List<WhereFilter> Predicate = new List<WhereFilter>();
            Predicate.Add(new WhereFilter()
            {
                Field = "KayitTarih",
                value = StartValue,
                Operator = "greaterthanorequal",
                IgnoreCase = true
            });
            Predicate.Add(new WhereFilter()
            {
                Field = "KayitTarih",
                value = EndValue,
                Operator = "lessthanorequal",
                IgnoreCase = true
            });
            ColPre = WhereFilter.And(Predicate);
            totalQuery = new Query().Where(ColPre);
        }

        if (StartValueAyril.HasValue && EndValueAyril.HasValue)
        {
            var ColPre = new WhereFilter();
            List<WhereFilter> Predicate = new List<WhereFilter>();
            Predicate.Add(new WhereFilter()
            {
                Field = "AyrilTarih",
                value = StartValueAyril,
                Operator = "greaterthanorequal",
                IgnoreCase = true
            });
            Predicate.Add(new WhereFilter()
            {
                Field = "AyrilTarih",
                value = EndValueAyril,
                Operator = "lessthanorequal",
                IgnoreCase = true
            });
            ColPre = WhereFilter.And(Predicate);
            totalQuery = new Query().Where(ColPre);
        }

        if (mufredatId.HasValue)
        {
            totalQuery.Where("mufredatId", "equal", mufredatId);
        }
        else if (programId.HasValue)
        {
            totalQuery.Where("programId", "equal", programId);
        }
        else if (bolumId.HasValue)
        {
            totalQuery.Where("bolumId", "equal", bolumId);
        }
        else if (fakulteId.HasValue)
        {
            totalQuery.Where("fakulteId", "equal", fakulteId);
        }

        if (ogrenimTurId.HasValue)
        {
            totalQuery.Where("ogrenimturId", "equal", ogrenimTurId);
        }
        if (ogrenimDurumId.HasValue)
        {
            totalQuery.Where("ogrenimDurumId", "equal", ogrenimDurumId);
        }
        if (kayitNedenId.HasValue)
        {
            totalQuery.Where("kayitNedenId", "equal", kayitNedenId);
        }
    }

    //public void ValueChangeHandler(RangeEventArgs args)
    //{
    //    var ColPre = new WhereFilter();
    //    List<WhereFilter> Predicate = new List<WhereFilter>();
    //    Predicate.Add(new WhereFilter()
    //    {
    //        Field = "KayitTarih",
    //        value = args.StartDate,
    //        Operator = "greaterthanorequal",
    //        IgnoreCase = true
    //    });
    //    Predicate.Add(new WhereFilter()
    //    {
    //        Field = "KayitTarih",
    //        value = args.EndDate,
    //        Operator = "lessthanorequal",
    //        IgnoreCase = true
    //    });
    //    ColPre = WhereFilter.And(Predicate);
    //    totalQuery = new Query().Where(ColPre);
    //}

    public void OnclickHandler(AccordionClickArgs args)
    {

    }
    bool isAccordExpanded;
    public async Task ExpandingHandler(ExpandEventArgs args)
    {
        if (!args.IsExpanded)
        {
            isAccordExpanded = false;
            totalQuery = new Query();
        }
        else
        {
            isAccordExpanded = true;
            await Refresh();
        }
    }



}



<style type="text/css" class="cssStyles">
    .photo {
        width: 100px;
        height: 100px;
        border-radius: 50px;
        box-shadow: inset 0 0 1px #e0e0e0, inset 0 0 14px rgba(0,0,0,0.2);
    }

    .title {
        font-size: medium;
        font-weight: 400;
    }

    .content {
        font-size: medium;
        color: #6c757d
    }

    .e-tab .e-content {
        overflow-y: hidden;
    }

    .e-tab .e-tab-header {
        border: 0;
    }

    .e-DoubleArrowRight:before {
        content: '\e7bb';
        color: #3ec9e8 !important;
    }

    /*.e-grid td.e-active {
        background-color: #a2fdff;
    }*/

    .form-group {
        margin-bottom: unset;
    }

    .col-form-label-sm {
        padding-bottom: unset;
    }

    .e-accordion .e-acrdn-item.e-select .e-acrdn-panel .e-acrdn-content {
        background: #a2d4e3;
    }

    .e-grid .e-altrow {
        background-color: #fafafa;
    }

    .e-accordion .e-acrdn-item .e-acrdn-header {
        text-align: right;
        padding-right: 50px;
    }



    .visible {
        display: inline-block;
        font-size: 18px;
        color: rgba(0,0,0,1);
    }

    .loading {
        position: absolute;
        height: 92%;
        width: 100%;
        background-color: rgba(1,1,1,0.2);
        z-index: 10000;
        display: flex;
        align-items: center;
        padding-left: 44%;
    }


    .visible {
        display: inline-block;
        font-size: 18px;
        color: rgba(0,0,0,1);
    }

    .loading {
        position: absolute;
        height: 92%;
        width: 100%;
        background-color: rgba(1,1,1,0.2);
        z-index: 10000;
        display: flex;
        align-items: center;
        padding-left: 44%;
    }


    _:-ms-fullscreen, :root .highcontrast .e-userimg.sf-icon-Male::before,
    _:-ms-fullscreen, :root .highcontrast .e-userimg.sf-icon-FeMale::before {
        color: black;
    }

    .highcontrast .e-userimg.sf-icon-Male::before,
    .highcontrast .e-userimg.sf-icon-FeMale::before {
        color: black;
    }

    .bootstrap .empimg {
        background-color: #0078d6;
    }

    .bootstrap4 .empimg {
        background-color: #0078d6;
    }

    /*  #Emptext {
        top: -12px;
        left: 41px;
        position: relative;
    }*/

    .empimg {
        height: 27px;
        width: 29px;
        border-radius: 14px;
    }

    .e-grid.e-rtl #Emptext {
        top: -12px;
        left: -41px;
        position: relative;
    }

    .e-userimg.sf-icon-Male::before,
    .e-userimg.sf-icon-FeMale::before {
        font-size: 13px;
    }

    .e-userimg.sf-icon-Male, .e-userimg.sf-icon-FeMale {
        margin: 0px 8px;
        line-height: 26px;
        color: white;
        font-size: 13px;
    }

        .e-userimg.sf-icon-Male::before {
            content: '\e700';
        }

        .e-userimg.sf-icon-FeMale::before {
            content: '\e701';
        }

    .highcontrast .e-grid td.e-rowcell.e-selectionbackground.e-active {
        background-color: transparent;
        color: white;
    }

    .e-bigger .e-grid .statustxt {
        position: relative;
        top: -2px;
    }

    .rating .star {
        font-size: 132%;
        color: lightgrey;
    }

        .rating .star.checked {
            color: #ffa600;
        }

        .rating .star:before {
            content: '★';
        }

    td.e-rowcell.e-selectionbackground.e-active {
        background-color: transparent;
    }

    .e-image {
        height: 13px;
        width: 14px;
    }

    td.e-rowcell .statustxt.e-activecolor {
        color: #00cc00;
        position: relative;
        /*top: 9px;*/
    }

    td.e-rowcell .statustxt.e-inactivecolor {
        color: #e60000;
        position: relative;
        /*top: 9px;*/
    }

    .statustemp.e-inactivecolor {
        background-color: #ffd7cc;
        width: 64px;
    }

    .statustemp.e-activecolor {
        background-color: #ccffcc;
        width: 57px;
    }

    .statustxt.e-activecolor {
        color: #00cc00;
    }

    .statustxt.e-inactivecolor {
        color: #e60000;
    }

    .statustemp {
        position: relative;
        height: 19px;
        border-radius: 5px;
        text-align: center
    }

    .highcontrast #msg {
        color: #FFFFFF
    }

    #msg {
        font-family: "Segoe UI", "GeezaPro", "DejaVu Serif", sans-serif;
        font-size: 14px;
        font-weight: 400;
        opacity: 0.95;
        color: #333;
        float: right;
        margin-top: 3px;
    }

    @@media only screen and (max-width: 370px) {
        #msg {
            float: left;
            margin-top: 3px;
        }

        #Grid {
            margin-top: 36px;
        }
    }

    #samplecontainer {
        padding-top: 5px;
    }

    #myProgress {
        position: relative;
        height: 18px;
        width: 10em;
        text-align: left;
        background-color: white;
    }

    .highcontrast .e-grid #myProgress {
        background-color: black;
    }

    .e-dddata {
        padding-bottom: 10px;
    }

    #myBar {
        position: absolute;
        width: 10%;
        height: 100%;
        background-color: #00b300;
    }

        #myBar.progressdisable {
            background-color: #df2222;
        }

    #label {
        position: relative;
        left: 10px;
        line-height: 18px;
        font-size: 10px;
        color: white;
    }

    @@font-face {
        font-family: 'Grid control Font';
        src: url(data:application/x-font-ttf;charset=utf-8;base64,AAEAAAAKAIAAAwAgT1MvMj1tSfQAAAEoAAAAVmNtYXDnE+ddAAABkAAAADpnbHlmWm7FjgAAAdgAAAPkaGVhZBFF/fMAAADQAAAANmhoZWEIHwQFAAAArAAAACRobXR4EAAAAAAAAYAAAAAQbG9jYQKaAUgAAAHMAAAACm1heHABEACgAAABCAAAACBuYW1lmuAR1QAABbwAAAKdcG9zdHgFC7MAAAhcAAAAQgABAAAEAAAAAFwEAAAAAAADwgABAAAAAAAAAAAAAAAAAAAABAABAAAAAQAAJ9BcPl8PPPUACwQAAAAAANcy3IEAAAAA1zLcgQAAAAADwgP0AAAACAACAAAAAAAAAAEAAAAEAJQAAgAAAAAAAgAAAAoACgAAAP8AAAAAAAAAAQQAAZAABQAAAokCzAAAAI8CiQLMAAAB6wAyAQgAAAIABQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUGZFZABA5wDnAgQAAAAAXAQAAAAAAAABAAAAAAAABAAAAAQAAAAEAAAABAAAAAAAAAIAAAADAAAAFAADAAEAAAAUAAQAJgAAAAQABAABAADnAv//AADnAP//AAAAAQAEAAAAAQACAAMAAAAAAAAAqAFIAfIAAAABAAAAAAPBA/MAkwAAASMPDRUfBQ8FHw4VDxYhLxY1Pw8vAz8DLxcjDwUBhQEIEQoKCwoEBQMEAwIBAQEBAwQFBggGAwIBAQICBQcKDAUEBwUFBgYICAYHCQkUFxcXPRUUFBAODAoMCQQEAgIBA4QBBAQEBQsKCw0PEhQUFh0sFxcUCQkHBgoMCAgDAwIBDAsGBQUDAgECBAcKDgYDAgEBAQMDBAUGBwkJCwsODxAOEQoLDA0ODwwNDg8PDxAD2gQLCQwOEgoLDA0NDxAREhMUFhYYGgoMBwgICQoKCgoKCiEUFgoLCQkIBncICAcHDgwLCRUKCw0NDg0OFBIMCwoQDxYTCwwMEw4ODQ4NDAoJChALDA4HBwgIdwwTERULDQ0OCQsHCAkJCgsMDA0NNiMaGxsODQ0NDAsLCgkJBwYEBA4ICQMEAwIBAQECAwMFBQABAAAAAAPCA/QAjQAAAQ8VFRcVDwcVHwwPFCEvFTM/Cy8INy8aAegOGhgVExAODAoMCwcKCAUFBAcGAgUDAQEDBgkHBAMBAQICBAcTCgsMDBkjMgUGBwgJCQsligkJCQ8OCwoJCgUFBgOEBgoGCAkLDQ4RCQkKC3UlCgoJCAcGBSITEhEPGRUPDwYDAgEBAQEJAgUCAQEBAQECAwYGCgsLDAwMDA0RCwoRDwQDCA8QEBERA/MCBQcJCQoKCwsPERAOEA0ODh8hEC8vEycZGRggJQoICAcGBQUFBAYKBQMDAwQCAQ4LCgkIBwYQRgYGBw8PEBEQGA8THR0iEBAQERAPDgYGBgU7EAYHCAkKCw4BAgICBwYHCAYHBwcGBgYVCBYLCrUUFBMTER8bHRkRDwwLCAcIBAIDAQYDBggFBQIBAAIAAAAAA14D9AA/AJIAAAEPDy8PPw8fDgUVHwcJAT8HNS8dKwEPHQJ9AQIDBAUGCAgJCQoLDAwMDQ0MDAwLCgkJCAgGBQQDAgEBAgMEBQYICAkJCgsMDAwNDQwMDAsKCQkICAYFBAMC/iYBAwQHCAkLDAEnAScMCwkIBwQDAQICAwQFBQcHBwkJCgoLDAwMDg0PDg8QEBAREBIREhISEhESEBEQEBAPDg8NDgwMDAsKCgkJBwcHBQUEAwICApYNDAwMCwoJCQgIBgUEAwIBAQIDBAUGCAgJCQoLDAwMDQ0MDAwLCgkJCAgGBQQDAgEBAgMEBQYICAkJCgsMDAwiDg4bGhkZGBcW/lMBrRYXGBkZGhscExMSEhISEREREA8PDw4NDQ0LCwsJCQgIBgYFBAQCAgICBAQFBgYICAkJCwsLDQ0NDg8PDxARERESEhISEwAAAAAAABIA3gABAAAAAAAAAAEAAAABAAAAAAABABEAAQABAAAAAAACAAcAEgABAAAAAAADABEAGQABAAAAAAAEABEAKgABAAAAAAAFAAsAOwABAAAAAAAGABEARgABAAAAAAAKACwAVwABAAAAAAALABIAgwADAAEECQAAAAIAlQADAAEECQABACIAlwADAAEECQACAA4AuQADAAEECQADACIAxwADAAEECQAEACIA6QADAAEECQAFABYBCwADAAEECQAGACIBIQADAAEECQAKAFgBQwADAAEECQALACQBmyBHcmlkIGNvbnRyb2wgRm9udFJlZ3VsYXJHcmlkIGNvbnRyb2wgRm9udEdyaWQgY29udHJvbCBGb250VmVyc2lvbiAxLjBHcmlkIGNvbnRyb2wgRm9udEZvbnQgZ2VuZXJhdGVkIHVzaW5nIFN5bmNmdXNpb24gTWV0cm8gU3R1ZGlvd3d3LnN5bmNmdXNpb24uY29tACAARwByAGkAZAAgAGMAbwBuAHQAcgBvAGwAIABGAG8AbgB0AFIAZQBnAHUAbABhAHIARwByAGkAZAAgAGMAbwBuAHQAcgBvAGwAIABGAG8AbgB0AEcAcgBpAGQAIABjAG8AbgB0AHIAbwBsACAARgBvAG4AdABWAGUAcgBzAGkAbwBuACAAMQAuADAARwByAGkAZAAgAGMAbwBuAHQAcgBvAGwAIABGAG8AbgB0AEYAbwBuAHQAIABnAGUAbgBlAHIAYQB0AGUAZAAgAHUAcwBpAG4AZwAgAFMAeQBuAGMAZgB1AHMAaQBvAG4AIABNAGUAdAByAG8AIABTAHQAdQBkAGkAbwB3AHcAdwAuAHMAeQBuAGMAZgB1AHMAaQBvAG4ALgBjAG8AbQAAAAACAAAAAAAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQBAgEDAQQBBQAETWFsZQZGZW1hbGUITG9jYXRpb24AAAAA) format('truetype');
        font-weight: normal;
        font-style: normal;
    }

    [class^="sf-icon-"], [class*=" sf-icon-"] {
        font-family: 'Grid control Font' !important;
        speak: none;
        font-size: 55px;
        font-style: normal;
        font-weight: normal;
        font-variant: normal;
        text-transform: none;
        line-height: 1;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
    }

    .e-accordion .e-acrdn-item .e-acrdn-header {
        background-color: lightcyan;
    }


    /*Satır başı çıbıkları renklendirme falan begin*/
    .e-grid .e-icon-gdownarrow {
        font-size: 20px;
        color: orangered;
    }

    .e-grid .e-icon-grightarrow {
        font-size: unset;
        color: #0ea798;
    }
    .e-detailrow {
        background-color: #0087ff1f;
    }
    /*Satır başı çıbıkları renklendirme falan end*/
</style>