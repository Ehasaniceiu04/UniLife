@using UniLife.Shared.Dto.Definitions
@using UniLife.Shared.DataModels
@inject HttpClient Http
@inject IMatToaster matToaster
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Buttons
@using System.IO
@attribute [Authorize(Roles = "Administrator,Personel")]

<ControlSection>
    <br />
    <div class="row pb-2 bg-light text-dark" style="margin-right: unset;margin-left: unset;">
        <div class="col-sm-12 col-md-6">
            <div class="form-group row">
                <label for="Adres" class="col-sm-2 col-form-label-sm">Adres</label>
                <div class="col-sm-10">
                    <SfTextBox ID="Adres" @bind-Value="@(Nufus.Adres)" CssClass="form-control" Multiline="true"></SfTextBox>
                </div>
                <label for="dropIl" class="col-sm-2 col-form-label-sm">Il / İlçe</label>
                <div class="col-sm-5">
                    <SfDropDownList ID="dropIl" @ref="dropIl" ShowClearButton="true" Index="0" TItem="IlDto" CssClass="form-control"
                                    TValue="int?" PopupHeight="230px" Placeholder="İl seçiniz..."
                                    @bind-Value="@Nufus.IlId" DataSource="@IlsList">
                        <DropDownListFieldSettings Text="Ad" Value="Id"></DropDownListFieldSettings>
                    </SfDropDownList>
                </div>
                <div class="col-sm-5">
                    <SfTextBox @bind-Value="@(Nufus.Ilce)" CssClass="form-control"></SfTextBox>
                </div>
            </div>
            <div class="form-group row">
                <label for="Telefon" class="col-sm-2 col-form-label-sm">Telefon</label>
                <div class="col-sm-10">
                    <SfTextBox ID="Telefon" @bind-Value="@(Nufus.Telefon)" CssClass="form-control"></SfTextBox>
                </div>
            </div>
            <div class="form-group row">
                <label for="Banka" class="col-sm-2 col-form-label-sm">Banka Ad</label>
                <div class="col-sm-10">
                    <SfTextBox ID="Banka" @bind-Value="@(Nufus.Banka)" CssClass="form-control"></SfTextBox>
                </div>
                <label for="Sube" class="col-sm-2 col-form-label-sm">Sube</label>
                <div class="col-sm-10">
                    <SfTextBox ID="Sube" @bind-Value="@(Nufus.Sube)" CssClass="form-control"></SfTextBox>
                </div>
                <label for="SubeKod" class="col-sm-2 col-form-label-sm">SubeKod</label>
                <div class="col-sm-10">
                    <SfTextBox ID="SubeKod" @bind-Value="@(Nufus.SubeKod)" CssClass="form-control"></SfTextBox>
                </div>
                <label for="HesapNo" class="col-sm-2 col-form-label-sm">HesapNo</label>
                <div class="col-sm-10">
                    <SfTextBox ID="HesapNo" @bind-Value="@(Nufus.HesapNo)" CssClass="form-control"></SfTextBox>
                </div>
                <label for="Iban" class="col-sm-2 col-form-label-sm">Iban</label>
                <div class="col-sm-10">
                    <SfTextBox ID="Iban" @bind-Value="@(Nufus.Iban)" CssClass="form-control"></SfTextBox>
                </div>
            </div>
            <div class="form-group row">
                <div class="col-sm-3">
                    <SfButton OnClick="Kaydet" CssClass="e-success form-control">Kaydet</SfButton>
                </div>

            </div>
        </div>
        <div class="col-sm-12 col-md-6">
            <div class="control_wrapper">
                <div id="dropArea" style="height: auto; overflow: auto">
                    <p>Resim Ekleyiniz. maks: 1.5 MB</p>

                    <SfUploader ID="UploadFiles" AutoUpload="false" DropArea=".control-fluid" MinFileSize=1000 MaxFileSize=1500000 AllowedExtensions=".png,.jpeg,jpg">
                        <UploaderEvents ValueChange="OnChangeUpload" OnRemove="onRemove"></UploaderEvents>
                        @*<UploaderAsyncSettings SaveUrl="http://localhost:53414/services/api/uploadbox/Save" RemoveUrl="https://aspnetmvc.syncfusion.com/services/api/uploadbox/Remove"></UploaderAsyncSettings>*@
                        <UploaderFiles>
                            <UploaderUploadedFiles Name="@(_OgrenciDto!=null?_OgrenciDto.ApplicationUserId.ToString():"")" Size=12000 Type="png"></UploaderUploadedFiles>
                        </UploaderFiles>
                    </SfUploader>

                    @*<SfUploader @ref="uploderObj" ID="UploadFiles" MinFileSize=1000 MaxFileSize=1500000 AllowedExtensions=".png,.jpeg,jpg">
                            <UploaderEvents ValueChange="onChange" OnRemove="onRemove"></UploaderEvents>
                            <UploaderTemplates>
                                <Template>
                                    <span class="wrapper">
                                        <img class="upload-image" alt="Image"
                                             src="@(files.Count >0 ? files.Where(item=>item.Name == context.Name)?.FirstOrDefault()?.Path : string.Empty)">
                                    </span>
                                    <div class="name file-name" title="@(context.Name)">@(context.Name)</div>
                                    <div class="file-size">@(context.Size)</div>
                                    <span class="e-icons e-file-remove-btn remove" id="removeIcon" title="Remove"></span>
                                    <span class="e-upload-icon e-icons e-file-remove-btn" title="Upload" id="iconUpload"></span>
                                </Template>
                            </UploaderTemplates>
                            <UploaderFiles>
                                <UploaderUploadedFiles Name="@(_OgrenciDto.ApplicationUserId.ToString())" Size=12000 Type="png"></UploaderUploadedFiles>
                            </UploaderFiles>
                        </SfUploader>*@
                </div>
            </div>
        </div>
    </div>
</ControlSection>

@code{
    public NufusDto Nufus { get; set; } = new NufusDto();
    List<IlDto> IlsList = new List<IlDto>();

    SfDropDownList<int?, IlDto> dropIl;

    bool IsEdit;

    [Parameter]
    public OgrenciDto _OgrenciDto { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await ReadIller();
        await GetNufus();
    }

    async Task ReadIller()
    {
        try
        {
            OData<IlDto> apiResponse = await Http.GetFromJsonAsync<OData<IlDto>>($"odata/ils?$select=Id,Ad");
            //OData<KeyValueDto> apiResponse = await Http.GetFromJsonAsync<OData<KeyValueDto>>($"odata/fakultes?$select=Id,Ad");
            if (apiResponse.Value.Count != 0)
            {
                IlsList = apiResponse.Value;
            }
            else
                matToaster.Add("", MatToastType.Danger, "İller getirilirken hata oluştu!");
        }
        catch (Exception ex)
        {
            matToaster.Add(ex.GetBaseException().Message, MatToastType.Danger, "Hata oluştu!");
        }
    }
    async Task GetNufus()
    {
        try
        {
            OData<NufusDto> apiResponse = await Http.GetFromJsonAsync<OData<NufusDto>>($"odata/nufuss?$filter=ApplicationUserId eq {_OgrenciDto.ApplicationUserId}");


            if (apiResponse.Value.Count != 0)
            {
                Nufus = apiResponse.Value.FirstOrDefault();
                IsEdit = true;
            }
            else
            {
                IsEdit = false;
            }

        }
        catch (Exception ex)
        {
            matToaster.Add(ex.GetBaseException().Message, MatToastType.Danger, "Hata oluştu!");
        }
    }

    async Task Kaydet()
    {
        try
        {
            ApiResponseDto apiResponse;
            Nufus.ApplicationUserId = _OgrenciDto.ApplicationUserId;
            if (IsEdit)
            {
                apiResponse = await Http.PutJsonAsync<ApiResponseDto>("api/nufus", Nufus);
            }
            else
            {
                apiResponse = await Http.PostJsonAsync<ApiResponseDto>("api/nufus", Nufus);

            }


            if (apiResponse.IsSuccessStatusCode)
            {
                matToaster.Add(apiResponse.Message, MatToastType.Success, "İşlem başarılı.");
            }
            else
                matToaster.Add(apiResponse.Message, MatToastType.Danger, "Hata oluştu!");
        }
        catch (Exception ex)
        {
            matToaster.Add(ex.GetBaseException().Message, MatToastType.Danger, "Hata oluştu!");
        }
    }

    //eski upladın removu
    public void OnFileRemove(RemovingEventArgs args)
    {
        args.PostRawFile = false;
    }

    private void onRemove(RemovingEventArgs args)
    {
        args.PostRawFile = false;


        //BU gerçekten siliyor.
        //foreach (var removeFile in args.FilesData)
        //{
        //    var rootPath = @"../UniLife.CommonUI/wwwroot/images/ogrenci/";
        //    if (File.Exists(Path.Combine(rootPath, removeFile.Name)))
        //    {
        //        File.Delete(Path.Combine(rootPath, removeFile.Name));
        //    }
        //}
    }

    //Eski upladın metodu
    private void OnChangeUpload(UploadChangeEventArgs args)
    {
        foreach (var file in args.Files)
        {
            //var path = @"path" + file.FileInfo.Name;

            var path = @"../UniLife.CommonUI/wwwroot/images/ogrenci/" + _OgrenciDto.ApplicationUserId.ToString() + "." + file.FileInfo.Type;

            FileStream filestream = new FileStream(path, FileMode.Create, FileAccess.Write);
            file.Stream.WriteTo(filestream);
            filestream.Close();
            file.Stream.Close();
        }
    }

    ////UPLOAD IMAGE ADN REMOVE
    //private SfUploader uploderObj;
    //private object selectedFile { get; set; }
    //List<fileInfo> files = new List<fileInfo>();



    //public class fileInfo
    //{
    //    public string Path { get; set; }
    //    public string Name { get; set; }
    //    public double Size { get; set; }
    //}

    //public void onChange(UploadChangeEventArgs args)
    //{
    //    files = new List<fileInfo>();
    //    foreach (var file in args.Files)
    //    {

    //        var path = @"../UniLife.CommonUI/wwwroot/images/ogrenci/"+ _OgrenciDto.ApplicationUserId.ToString() + "." + file.FileInfo.Type; //+ file.FileInfo.Name;
    //        FileStream filestream = new FileStream(path, FileMode.Create, FileAccess.Write);
    //        file.Stream.WriteTo(filestream);
    //        filestream.Close();
    //        file.Stream.Close();

    //        files.Add(new fileInfo() { Path = $"/_content/UniLife.CommonUI/images/ogrenci/" + _OgrenciDto.ApplicationUserId.ToString() + "." + file.FileInfo.Type, Name = file.FileInfo.Name, Size = file.FileInfo.Size });
    //    }
    //}
    //public void onRemove(RemovingEventArgs args)
    //{
    //    foreach (var removeFile in args.FilesData)
    //    {
    //        if (File.Exists(Path.Combine(@"../UniLife.CommonUI/wwwroot/images/ogrenci/", _OgrenciDto.ApplicationUserId.ToString() + "." + removeFile.Type)))
    //        {
    //            File.Delete(Path.Combine(@"../UniLife.CommonUI/wwwroot/images/ogrenci/", _OgrenciDto.ApplicationUserId.ToString() + "." + removeFile.Type));
    //        }
    //    }
    //}

    //public void uploadFile(MouseEventArgs args)
    //{
    //    this.uploderObj.Upload(selectedFile);
    //}
    ////UPLOAD IMAGE ADN REMOVE END
}

<style>

    /*FileUplaod*/
    .control_wrapper {
        width: 350px;
        margin: 0 auto;
    }

    /*.control_wrapper {
            max-width: 505px;
            margin: auto;
        }

        #uploadicon {
            cursor: pointer;
            top: 5px;
            left: 20px;
            position: relative;
        }

        .e-upload {
            border: none;
            margin-top: 10px;
            width: 100%;
        }

        #drop {
            font-size: 14px;
        }

        .e-bigger #drop {
            font-size: 15px;
        }

        #dropArea {
            border: 1px dashed #c3c3cc;
            position: relative;
            text-align: center;
            padding: 20px 0 10px;
        }

            #dropArea .e-upload .e-upload-files {
                text-align: initial;
                border-top: none;
            }

            #dropArea .e-upload-files .e-file-delete-btn.e-icons,
            #dropArea .e-upload-files .e-file-remove-btn.e-icons,
            #dropArea .e-upload-files .e-file-abort-btn {
                top: 120px;
                background-color: white;
                border-radius: 50%;
                font-size: 12px;
                left: 80px;
            }

            #dropArea .e-upload-files li .e-file-remove-btn.e-icons.e-upload-icon {
                font-size: 14px;
                left: 20px;
            }

            #dropArea .e-upload-files li:hover .e-icons {
                visibility: visible;
            }

            #dropArea .e-upload-files li .e-icons {
                visibility: hidden;
            }

        @@font-face {
            font-family: 'Uploader_Icon';
            src: url(data:application/x-font-ttf;charset=utf-8;base64,AAEAAAAKAIAAAwAgT1MvMj1tSfIAAAEoAAAAVmNtYXDnEOdVAAABiAAAADZnbHlmoZcPvgAAAcgAAABAaGVhZBLQTSUAAADQAAAANmhoZWEINQQDAAAArAAAACRobXR4CAAAAAAAAYAAAAAIbG9jYQAgAAAAAAHAAAAABm1heHABDgAdAAABCAAAACBuYW1lQySinQAAAggAAAIxcG9zdLfl0usAAAQ8AAAAMgABAAAEAAAAAFwEAAAAAAAD2AABAAAAAAAAAAAAAAAAAAAAAgABAAAAAQAA2vKJUF8PPPUACwQAAAAAANftBBgAAAAA1+0EGAAAAAAD2AP4AAAACAACAAAAAAAAAAEAAAACABEAAgAAAAAAAgAAAAoACgAAAP8AAAAAAAAAAQQAAZAABQAAAokCzAAAAI8CiQLMAAAB6wAyAQgAAAIABQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUGZFZABA5wDnAAQAAAAAXAQAAAAAAAABAAAAAAAABAAAAAQAAAAAAAACAAAAAwAAABQAAwABAAAAFAAEACIAAAAEAAQAAQAA5wD//wAA5wD//wAAAAEABAAAAAEAAAAAAAAAIAAAAAIAAAAAA9gD+AAHABAAADchESMVITUjEzM3ETMRFzMBKAOwPvzMPp1mtUC1Zv7FCAF6vb0BO7X+EAHwtQE7AAAAABIA3gABAAAAAAAAAAEAAAABAAAAAAABAAgAAQABAAAAAAACAAcACQABAAAAAAADAAgAEAABAAAAAAAEAAgAGAABAAAAAAAFAAsAIAABAAAAAAAGAAgAKwABAAAAAAAKACwAMwABAAAAAAALABIAXwADAAEECQAAAAIAcQADAAEECQABABAAcwADAAEECQACAA4AgwADAAEECQADABAAkQADAAEECQAEABAAoQADAAEECQAFABYAsQADAAEECQAGABAAxwADAAEECQAKAFgA1wADAAEECQALACQBLyBVcGxvYWRlclJlZ3VsYXJVcGxvYWRlclVwbG9hZGVyVmVyc2lvbiAxLjBVcGxvYWRlckZvbnQgZ2VuZXJhdGVkIHVzaW5nIFN5bmNmdXNpb24gTWV0cm8gU3R1ZGlvd3d3LnN5bmNmdXNpb24uY29tACAAVQBwAGwAbwBhAGQAZQByAFIAZQBnAHUAbABhAHIAVQBwAGwAbwBhAGQAZQByAFUAcABsAG8AYQBkAGUAcgBWAGUAcgBzAGkAbwBuACAAMQAuADAAVQBwAGwAbwBhAGQAZQByAEYAbwBuAHQAIABnAGUAbgBlAHIAYQB0AGUAZAAgAHUAcwBpAG4AZwAgAFMAeQBuAGMAZgB1AHMAaQBvAG4AIABNAGUAdAByAG8AIABTAHQAdQBkAGkAbwB3AHcAdwAuAHMAeQBuAGMAZgB1AHMAaQBvAG4ALgBjAG8AbQAAAAACAAAAAAAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBAgEDAAhVcGxvYWRlcgAAAAA=) format('truetype');
            font-weight: normal;
            font-style: normal;
        }

        #dropArea .e-upload .e-upload-files .e-icons.e-upload-icon {
            font-family: 'Uploader_Icon';
            speak: none;
            font-size: 16px;
            left: 20px;
            font-style: normal;
            font-weight: normal;
            font-variant: normal;
            text-transform: none;
            line-height: 1;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
        }

            #dropArea .e-upload .e-upload-files .e-icons.e-upload-icon::before {
                content: '\e700';
            }

        #dropArea .e-upload .e-upload-files .e-icons:not(.e-uploaded):hover {
            background-color: #e6e6e6;
            border-color: #adadad;
            color: #333;
        }

        #dropArea .e-upload .e-upload-files .e-upload-file-list {
            border: 0;
            display: inline-block;
            width: 165px;
        }

        .upload-image {
            width: 150px;
            height: 150px;
            display: inline-flex;
            background-size: contain;
            margin: 7px;
            text-align: center;
            line-height: 10;
            border-radius: 5px;
        }

            .upload-image:after {
                content: "";
                position: absolute;
                top: 6px;
                left: 6px;
                width: inherit;
                height: inherit;
                background: lightgray url('http://via.placeholder.com/300?text=Loading...') no-repeat center;
                color: transparent;
                border-radius: 5px;
            }

        div.file-name {
            color: rgba(0, 0, 0, 0.87);
            font-size: 14px;
            padding: 3px 10px;
            overflow: hidden;
            text-overflow: ellipsis;
            width: 90%;
            white-space: nowrap;
        }

        div.file-size {
            font-size: 13px;
            padding: 3px 10px;
            overflow: hidden;
        }

        .progressbar {
            background: #ff4081;
            border: none;
            border-radius: 10px;
            height: 4px;
            margin-left: 7px;
            width: 90%;
            top: -60px;
            position: relative;
        }

        #dropArea progress {
            border: none;
            background: #fff;
        }

        progress::-webkit-progress-bar {
            border: none;
            background-color: #ffffff;
        }

        .material progress::-moz-progress-bar {
            border-radius: 2px;
            background-color: #ff4081;
        }

        .material #dropArea span a {
            color: #ff4081;
        }

        @@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
            #dropArea .e-upload .e-upload-files .e-file-remove-btn.e-icons, .e-bigger #dropArea .e-upload .e-upload-files .e-file-remove-btn.e-icons {
                padding: 18px 25px 18px 12px;
            }
        }*/
    /*Fileupload end*/
</style>