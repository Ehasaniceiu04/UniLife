// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UniLife.Storage;

namespace UniLife.Storage.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200814223316_zxcasd")]
    partial class zxcasd
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("UniLife.Server.Models.Tenant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<Guid>("OwnerUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("character varying(128)")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.HasIndex("OwnerUserId")
                        .IsUnique();

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.AkademikTakvim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("character varying(600)")
                        .HasMaxLength(600);

                    b.Property<DateTime?>("BasTarih")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("BitTarih")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("DonemId")
                        .HasColumnType("integer");

                    b.Property<int?>("FakulteId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Kod")
                        .HasColumnType("integer");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.HasIndex("DonemId");

                    b.HasIndex("FakulteId");

                    b.ToTable("AkademikTakvims");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.Akademisyen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("character varying(300)")
                        .HasMaxLength(300);

                    b.Property<Guid>("ApplicationUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("AyrilTarih")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Diller")
                        .HasColumnType("text");

                    b.Property<bool>("Durum")
                        .HasColumnType("boolean");

                    b.Property<string>("EgitimBilg")
                        .HasColumnType("text");

                    b.Property<string>("Eimg")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("KayitTarih")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("OgrtNo")
                        .HasColumnType("text");

                    b.Property<string>("Soyad")
                        .HasColumnType("text");

                    b.Property<string>("TCKN")
                        .HasColumnType("character varying(11)")
                        .HasMaxLength(11);

                    b.Property<string>("Telefon")
                        .HasColumnType("text");

                    b.Property<string>("Telefon2")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("Akademisyens");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.ApiLogItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<Guid?>("ApplicationUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("IPAddress")
                        .HasColumnType("character varying(45)")
                        .HasMaxLength(45);

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("character varying(2048)")
                        .HasMaxLength(2048);

                    b.Property<string>("QueryString")
                        .HasColumnType("character varying(2048)")
                        .HasMaxLength(2048);

                    b.Property<string>("RequestBody")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<DateTime>("RequestTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ResponseBody")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<long>("ResponseMillis")
                        .HasColumnType("bigint");

                    b.Property<int>("StatusCode")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("ApiLogs");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("FirstName")
                        .HasColumnType("character varying(64)")
                        .HasMaxLength(64);

                    b.Property<string>("FullName")
                        .HasColumnType("character varying(64)")
                        .HasMaxLength(64);

                    b.Property<string>("LastName")
                        .HasColumnType("character varying(64)")
                        .HasMaxLength(64);

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<string>("TCKN")
                        .HasColumnType("character varying(11)")
                        .HasMaxLength(11);

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<int>("UserType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.Askerlik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("Alinis")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("ApplicationUserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("Durum")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("Islem")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("Tecil")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("Terhis")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("Askerliks");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.Bina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("character varying(300)")
                        .HasMaxLength(300);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.ToTable("Binas");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.Bolum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("character varying(400)")
                        .HasMaxLength(400);

                    b.Property<string>("AdEn")
                        .HasColumnType("text");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("DiplomaAd")
                        .HasColumnType("text");

                    b.Property<string>("DiplomaAdEn")
                        .HasColumnType("text");

                    b.Property<bool>("Durum")
                        .HasColumnType("boolean");

                    b.Property<int>("FakulteId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsBologna")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("KisaAd")
                        .HasColumnType("text");

                    b.Property<string>("KisaAdEn")
                        .HasColumnType("text");

                    b.Property<string>("Kod")
                        .HasColumnType("text");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("OgrenimSure")
                        .HasColumnType("integer");

                    b.Property<int>("OgrenimTurId")
                        .HasColumnType("integer");

                    b.Property<string>("OsymKod")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FakulteId");

                    b.HasIndex("OgrenimTurId");

                    b.ToTable("Bolums");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.DbLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Exception")
                        .HasColumnType("text");

                    b.Property<string>("Level")
                        .HasColumnType("text");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<string>("MessageTemplate")
                        .HasColumnType("text");

                    b.Property<string>("Properties")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("TimeStamp")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.Ders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("character varying(300)")
                        .HasMaxLength(300);

                    b.Property<string>("AdEn")
                        .HasColumnType("text");

                    b.Property<int>("Akts")
                        .HasColumnType("integer");

                    b.Property<int>("BolumId")
                        .HasColumnType("integer");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("DonemId")
                        .HasColumnType("integer");

                    b.Property<bool>("Durum")
                        .HasColumnType("boolean");

                    b.Property<int>("FakulteId")
                        .HasColumnType("integer");

                    b.Property<int>("GecmeNotu")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("KisaAd")
                        .HasColumnType("text");

                    b.Property<string>("Kod")
                        .HasColumnType("text");

                    b.Property<double>("Kredi")
                        .HasColumnType("double precision");

                    b.Property<int>("LabSaat")
                        .HasColumnType("integer");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("MufredatId")
                        .HasColumnType("integer");

                    b.Property<string>("OptikKod")
                        .HasColumnType("text");

                    b.Property<int>("ProgramId")
                        .HasColumnType("integer");

                    b.Property<string>("SecmeliKodu")
                        .HasColumnType("text");

                    b.Property<int>("Sinif")
                        .HasColumnType("integer");

                    b.Property<int>("TeoSaat")
                        .HasColumnType("integer");

                    b.Property<int>("UygSaat")
                        .HasColumnType("integer");

                    b.Property<bool>("Zorunlu")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("BolumId");

                    b.HasIndex("DonemId");

                    b.HasIndex("FakulteId");

                    b.HasIndex("MufredatId");

                    b.HasIndex("ProgramId");

                    b.ToTable("Derss");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.DersAcilan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("ADKayit")
                        .HasColumnType("integer");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("character varying(300)")
                        .HasMaxLength(300);

                    b.Property<string>("AdEn")
                        .HasColumnType("text");

                    b.Property<int?>("AkademisyenId")
                        .HasColumnType("integer");

                    b.Property<int>("Akts")
                        .HasColumnType("integer");

                    b.Property<int>("AltKont")
                        .HasColumnType("integer");

                    b.Property<int>("AltKota")
                        .HasColumnType("integer");

                    b.Property<int>("BolDisKont")
                        .HasColumnType("integer");

                    b.Property<int>("BolDisKota")
                        .HasColumnType("integer");

                    b.Property<int>("BolumId")
                        .HasColumnType("integer");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("DersId")
                        .HasColumnType("integer");

                    b.Property<int>("DonemId")
                        .HasColumnType("integer");

                    b.Property<bool>("Durum")
                        .HasColumnType("boolean");

                    b.Property<int>("FakulteId")
                        .HasColumnType("integer");

                    b.Property<int>("GecmeNotu")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("KisaAd")
                        .HasColumnType("text");

                    b.Property<string>("Kod")
                        .HasColumnType("text");

                    b.Property<double>("Kredi")
                        .HasColumnType("double precision");

                    b.Property<int>("LabSaat")
                        .HasColumnType("integer");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("MufredatId")
                        .HasColumnType("integer");

                    b.Property<int?>("ODTekrar")
                        .HasColumnType("integer");

                    b.Property<string>("OptikKod")
                        .HasColumnType("text");

                    b.Property<int>("ProgramId")
                        .HasColumnType("integer");

                    b.Property<string>("SecmeliKodu")
                        .HasColumnType("text");

                    b.Property<int>("Sinif")
                        .HasColumnType("integer");

                    b.Property<int>("Sube")
                        .HasColumnType("integer");

                    b.Property<int>("TeoSaat")
                        .HasColumnType("integer");

                    b.Property<int>("TopKont")
                        .HasColumnType("integer");

                    b.Property<int>("UygSaat")
                        .HasColumnType("integer");

                    b.Property<bool>("Zorunlu")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("AkademisyenId");

                    b.HasIndex("BolumId");

                    b.HasIndex("DersId");

                    b.HasIndex("DonemId");

                    b.HasIndex("FakulteId");

                    b.HasIndex("MufredatId");

                    b.HasIndex("ProgramId");

                    b.ToTable("DersAcilans");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.DersKayit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AlTip")
                        .HasColumnType("text");

                    b.Property<double>("Carpan")
                        .HasColumnType("double precision");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("DersAcilanId")
                        .HasColumnType("integer");

                    b.Property<string>("DersYerineSecilenAd")
                        .HasColumnType("text");

                    b.Property<int?>("DersYerineSecilenId")
                        .HasColumnType("integer");

                    b.Property<bool>("GecDurum")
                        .HasColumnType("boolean");

                    b.Property<int>("HBN")
                        .HasColumnType("integer");

                    b.Property<string>("HarfNot")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("OgrenciId")
                        .HasColumnType("integer");

                    b.Property<double>("Ort")
                        .HasColumnType("double precision");

                    b.Property<int>("Sonuc")
                        .HasColumnType("integer");

                    b.Property<int>("SonucDurum")
                        .HasColumnType("integer");

                    b.Property<double>("TSkor")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("DersAcilanId");

                    b.HasIndex("OgrenciId");

                    b.ToTable("DersKayits");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.Derslik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .HasColumnType("text");

                    b.Property<int>("BinaId")
                        .HasColumnType("integer");

                    b.Property<int>("Capacity")
                        .HasColumnType("integer");

                    b.Property<string>("Color")
                        .HasColumnType("text");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BinaId");

                    b.ToTable("Dersliks");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.DerslikRezerv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CategoryColor")
                        .HasColumnType("text");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("DersAcilanId")
                        .HasColumnType("integer");

                    b.Property<int>("DerslikId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ElementType")
                        .HasColumnType("text");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("EndTimeValue")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("EndTimezone")
                        .HasColumnType("text");

                    b.Property<bool?>("IsAllDay")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBlock")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSinav")
                        .HasColumnType("boolean");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("RecurrenceException")
                        .HasColumnType("text");

                    b.Property<int?>("RecurrenceID")
                        .HasColumnType("integer");

                    b.Property<string>("RecurrenceRule")
                        .HasColumnType("text");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("StartTimeValue")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("StartTimezone")
                        .HasColumnType("text");

                    b.Property<string>("Subject")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DersAcilanId");

                    b.HasIndex("DerslikId");

                    b.ToTable("DerslikRezervs");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.Donem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .HasColumnType("text");

                    b.Property<string>("AdEn")
                        .HasColumnType("text");

                    b.Property<DateTime?>("BasTarih")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("BitTarih")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("DonemTipId")
                        .HasColumnType("integer");

                    b.Property<bool>("Durum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("KisaAd")
                        .HasColumnType("text");

                    b.Property<string>("KisaAdEn")
                        .HasColumnType("text");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("Yil")
                        .HasColumnType("integer");

                    b.Property<int>("YilTip")
                        .HasColumnType("integer");

                    b.Property<bool>("YokSisDurum")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("DonemTipId");

                    b.ToTable("Donems");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.DonemTip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .HasColumnType("text");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("isActiveDonemTip")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("DonemTips");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.Fakulte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("character varying(300)")
                        .HasMaxLength(300);

                    b.Property<string>("AdEn")
                        .HasColumnType("text");

                    b.Property<string>("AdEnKisa")
                        .HasColumnType("text");

                    b.Property<string>("Adres")
                        .HasColumnType("text");

                    b.Property<string>("Adres2")
                        .HasColumnType("text");

                    b.Property<int>("BirimID")
                        .HasColumnType("integer");

                    b.Property<string>("BolognaIcerikEN")
                        .HasColumnType("text");

                    b.Property<string>("BolognaIcerikTR")
                        .HasColumnType("text");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("Durum")
                        .HasColumnType("boolean");

                    b.Property<string>("EPosta")
                        .HasColumnType("text");

                    b.Property<string>("Faks")
                        .HasColumnType("text");

                    b.Property<int>("IlKod")
                        .HasColumnType("integer");

                    b.Property<int>("IlceId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsBologna")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("KisaAd")
                        .HasColumnType("text");

                    b.Property<string>("Kod")
                        .HasColumnType("text");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("OgrenimSure")
                        .HasColumnType("integer");

                    b.Property<int>("OgrenimTurId")
                        .HasColumnType("integer");

                    b.Property<string>("Tel")
                        .HasColumnType("text");

                    b.Property<int>("Tip")
                        .HasColumnType("integer");

                    b.Property<int>("UniversiteId")
                        .HasColumnType("integer");

                    b.Property<string>("Web")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OgrenimTurId");

                    b.HasIndex("UniversiteId");

                    b.ToTable("Fakultes");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.FakulteTur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .HasColumnType("text");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Tur")
                        .HasColumnType("text");

                    b.Property<string>("TurEn")
                        .HasColumnType("text");

                    b.Property<string>("YokasId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("FakulteTurs");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.Harc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("character varying(300)")
                        .HasMaxLength(300);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("DonemId")
                        .HasColumnType("integer");

                    b.Property<int>("IlkUzatma")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("NormalSure")
                        .HasColumnType("integer");

                    b.Property<int>("ProgramId")
                        .HasColumnType("integer");

                    b.Property<int>("TakipYillar")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DonemId");

                    b.HasIndex("ProgramId");

                    b.ToTable("Harcs");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.Il", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .HasColumnType("text");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Kod")
                        .HasColumnType("integer");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.ToTable("Ils");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.KayitNeden", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .HasColumnType("text");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Kod")
                        .HasColumnType("integer");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.ToTable("KayitNedens");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uuid");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("When")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("UserID");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.Mufredat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("character varying(300)")
                        .HasMaxLength(300);

                    b.Property<string>("AdEn")
                        .HasColumnType("text");

                    b.Property<bool>("Aktif")
                        .HasColumnType("boolean");

                    b.Property<int>("AraSinavEo")
                        .HasColumnType("integer");

                    b.Property<DateTime>("BasTarih")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("BitTarih")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("Durum")
                        .HasColumnType("integer");

                    b.Property<int>("FinalBaraj")
                        .HasColumnType("integer");

                    b.Property<int>("GecmeNot")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("KararAcik")
                        .HasColumnType("text");

                    b.Property<DateTime>("KararTarih")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("KisaAd")
                        .HasColumnType("text");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("ProgDersGec")
                        .HasColumnType("integer");

                    b.Property<int>("ProgramId")
                        .HasColumnType("integer");

                    b.Property<int>("YariSonuSinavEo")
                        .HasColumnType("integer");

                    b.Property<int>("Yil")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProgramId");

                    b.ToTable("Mufredats");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.Nufus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Adres")
                        .HasColumnType("text");

                    b.Property<Guid>("ApplicationUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Banka")
                        .HasColumnType("text");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("HesapNo")
                        .HasColumnType("text");

                    b.Property<string>("Iban")
                        .HasColumnType("text");

                    b.Property<int>("IlId")
                        .HasColumnType("integer");

                    b.Property<string>("Ilce")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Sube")
                        .HasColumnType("text");

                    b.Property<string>("SubeKod")
                        .HasColumnType("text");

                    b.Property<string>("Telefon")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("IlId");

                    b.ToTable("Nufuss");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.OgrCeza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CezaAd")
                        .HasColumnType("text");

                    b.Property<string>("CezaDesc")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CezaTarih")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("OgrenciId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OgrenciId");

                    b.ToTable("OgrCezas");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.OgrDondur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("DondTarih")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDond")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("OgrenciId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OgrenciId");

                    b.ToTable("OgrDondurs");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.OgrGecis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("GelBirim")
                        .HasColumnType("text");

                    b.Property<string>("GelBolum")
                        .HasColumnType("text");

                    b.Property<string>("GelUniv")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("OgrenciId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OgrenciId");

                    b.ToTable("OgrGeciss");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.OgrHarc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("DonemId")
                        .HasColumnType("integer");

                    b.Property<double>("IadeTutar")
                        .HasColumnType("double precision");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("OgrenciId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("TahakkukTarih")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Tipi")
                        .HasColumnType("text");

                    b.Property<string>("Turu")
                        .HasColumnType("text");

                    b.Property<double>("Tutar")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("DonemId");

                    b.HasIndex("OgrenciId");

                    b.ToTable("OgrHarcs");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.OgrStaj", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("OgrenciId")
                        .HasColumnType("integer");

                    b.Property<string>("StajSirket")
                        .HasColumnType("text");

                    b.Property<DateTime?>("StajTarihBas")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("StajTarihSon")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("OgrenciId");

                    b.ToTable("OgrStajs");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.OgrTez", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("OgrenciId")
                        .HasColumnType("integer");

                    b.Property<string>("TezKonu")
                        .HasColumnType("text");

                    b.Property<DateTime?>("TezTarih")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("OgrenciId");

                    b.ToTable("OgrTezs");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.Ogrenci", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("character varying(300)")
                        .HasMaxLength(300);

                    b.Property<string>("Adres")
                        .HasColumnType("text");

                    b.Property<string>("AnaOgrNo")
                        .HasColumnType("text");

                    b.Property<Guid>("ApplicationUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("AskerDurum")
                        .HasColumnType("text");

                    b.Property<DateTime?>("AyrilTarih")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("BilgNotu")
                        .HasColumnType("text");

                    b.Property<int>("BolumId")
                        .HasColumnType("integer");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("DanismanId")
                        .HasColumnType("integer");

                    b.Property<int?>("DanismanIkiId")
                        .HasColumnType("integer");

                    b.Property<string>("DnmSnfGecBilgi")
                        .HasColumnType("text");

                    b.Property<bool>("Durum")
                        .HasColumnType("boolean");

                    b.Property<string>("Eimg")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int>("FakulteId")
                        .HasColumnType("integer");

                    b.Property<decimal>("GenelBakiye")
                        .HasColumnType("numeric");

                    b.Property<decimal>("GerekenTopUcret")
                        .HasColumnType("numeric");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMale")
                        .HasColumnType("boolean");

                    b.Property<int>("KayitNedenId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("KayitTarih")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("MufredatId")
                        .HasColumnType("integer");

                    b.Property<decimal>("OdenenTopUcret")
                        .HasColumnType("numeric");

                    b.Property<long>("OgrNo")
                        .HasColumnType("bigint");

                    b.Property<int>("OgrenimDurumId")
                        .HasColumnType("integer");

                    b.Property<int>("OgrenimTurId")
                        .HasColumnType("integer");

                    b.Property<int>("ProgramId")
                        .HasColumnType("integer");

                    b.Property<int>("Sinif")
                        .HasColumnType("integer");

                    b.Property<string>("Soyad")
                        .HasColumnType("text");

                    b.Property<string>("TCKN")
                        .HasColumnType("character varying(11)")
                        .HasMaxLength(11);

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("BolumId");

                    b.HasIndex("DanismanId");

                    b.HasIndex("DanismanIkiId");

                    b.HasIndex("FakulteId");

                    b.HasIndex("KayitNedenId");

                    b.HasIndex("MufredatId");

                    b.HasIndex("OgrenimDurumId");

                    b.HasIndex("OgrenimTurId");

                    b.HasIndex("ProgramId");

                    b.ToTable("Ogrencis");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.OgrenciDiger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CezaAd")
                        .HasColumnType("text");

                    b.Property<string>("CezaDesc")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CezaTarih")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("DondTarih")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("GelBirim")
                        .HasColumnType("text");

                    b.Property<string>("GelBolum")
                        .HasColumnType("text");

                    b.Property<string>("GelUniv")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDond")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("OgrenciId")
                        .HasColumnType("integer");

                    b.Property<string>("StajSirket")
                        .HasColumnType("text");

                    b.Property<DateTime?>("StajTarihBas")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("StajTarihSon")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("TezKonu")
                        .HasColumnType("text");

                    b.Property<DateTime?>("TezTarih")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("OgrenciId");

                    b.ToTable("OgrenciDigers");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.OgrenimDurum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .HasColumnType("text");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Kod")
                        .HasColumnType("integer");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.ToTable("OgrenimDurums");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.OgrenimTur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .HasColumnType("text");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.ToTable("OgrenimTurs");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.Osym", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<Guid>("ApplicationUserId")
                        .HasColumnType("uuid");

                    b.Property<double>("BasariPuan")
                        .HasColumnType("double precision");

                    b.Property<int>("BasariSira")
                        .HasColumnType("integer");

                    b.Property<string>("BolumKodu")
                        .HasColumnType("text");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("OkulBirinci")
                        .HasColumnType("boolean");

                    b.Property<string>("OsymTip")
                        .HasColumnType("text");

                    b.Property<string>("Puan")
                        .HasColumnType("text");

                    b.Property<string>("PuanTuru")
                        .HasColumnType("text");

                    b.Property<string>("PuanYuzde")
                        .HasColumnType("text");

                    b.Property<int>("TercihSirasi")
                        .HasColumnType("integer");

                    b.Property<string>("Yil")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("Osyms");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.Personel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("character varying(300)")
                        .HasMaxLength(300);

                    b.Property<Guid>("ApplicationUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("AyrilTarih")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("Durum")
                        .HasColumnType("boolean");

                    b.Property<string>("Eimg")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("KayitTarih")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("PersNo")
                        .HasColumnType("text");

                    b.Property<string>("Soyad")
                        .HasColumnType("text");

                    b.Property<string>("TCKN")
                        .HasColumnType("character varying(11)")
                        .HasMaxLength(11);

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("Personels");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.Program", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("character varying(300)")
                        .HasMaxLength(300);

                    b.Property<string>("AdEn")
                        .HasColumnType("text");

                    b.Property<string>("Adres")
                        .HasColumnType("text");

                    b.Property<int>("AnaBolum")
                        .HasColumnType("integer");

                    b.Property<int>("AzamiSure")
                        .HasColumnType("integer");

                    b.Property<string>("BarajNot")
                        .HasColumnType("text");

                    b.Property<int>("BolumId")
                        .HasColumnType("integer");

                    b.Property<string>("BrnOgrOsymKod")
                        .HasColumnType("text");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("Dil")
                        .HasColumnType("integer");

                    b.Property<string>("DiplomaAd")
                        .HasColumnType("text");

                    b.Property<string>("DiplomaAdEn")
                        .HasColumnType("text");

                    b.Property<bool>("Durum")
                        .HasColumnType("boolean");

                    b.Property<int>("FakulteId")
                        .HasColumnType("integer");

                    b.Property<int>("GenelKon")
                        .HasColumnType("integer");

                    b.Property<decimal>("HarcTutar")
                        .HasColumnType("numeric");

                    b.Property<string>("Iletisim")
                        .HasColumnType("text");

                    b.Property<bool>("IsBologna")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHazirlik")
                        .HasColumnType("boolean");

                    b.Property<string>("KisaAd")
                        .HasColumnType("text");

                    b.Property<string>("KisaAdEn")
                        .HasColumnType("text");

                    b.Property<int>("Kod")
                        .HasColumnType("integer");

                    b.Property<string>("MezuniyetUnvan")
                        .HasColumnType("text");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("NormalSure")
                        .HasColumnType("integer");

                    b.Property<string>("OptKod")
                        .HasColumnType("text");

                    b.Property<string>("OsymKod")
                        .HasColumnType("text");

                    b.Property<string>("OsymKodBurslu")
                        .HasColumnType("text");

                    b.Property<string>("OsymKodCeyrekBurs")
                        .HasColumnType("text");

                    b.Property<string>("OsymKodYariBurslu")
                        .HasColumnType("text");

                    b.Property<string>("OsymTur")
                        .HasColumnType("text");

                    b.Property<int>("ProgramTipId")
                        .HasColumnType("integer");

                    b.Property<int>("ProgramTurId")
                        .HasColumnType("integer");

                    b.Property<bool>("StajDurum")
                        .HasColumnType("boolean");

                    b.Property<int>("TuikKod")
                        .HasColumnType("integer");

                    b.Property<bool>("Yerleske")
                        .HasColumnType("boolean");

                    b.Property<bool>("Yillik")
                        .HasColumnType("boolean");

                    b.Property<int>("YoksisBirimKod")
                        .HasColumnType("integer");

                    b.Property<bool>("YoksisDurum")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("BolumId");

                    b.HasIndex("FakulteId");

                    b.ToTable("Programs");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.Sinav", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .HasColumnType("text");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("DersAcilanId")
                        .HasColumnType("integer");

                    b.Property<int>("EtkiOran")
                        .HasColumnType("integer")
                        .HasMaxLength(100);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsKilit")
                        .HasColumnType("boolean");

                    b.Property<string>("KisaAd")
                        .HasColumnType("text");

                    b.Property<int?>("MazeretiSinavId")
                        .HasColumnType("integer");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("SablonAd")
                        .HasColumnType("text");

                    b.Property<int>("SinavTipId")
                        .HasColumnType("integer");

                    b.Property<int>("SinavTurId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Tarih")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("TarihIlan")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("DersAcilanId");

                    b.HasIndex("SinavTipId");

                    b.HasIndex("SinavTurId");

                    b.ToTable("Sinavs");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.SinavKayit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("MazeretiSinavKayitId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<double>("OgrNot")
                        .HasColumnType("double precision");

                    b.Property<int>("OgrenciId")
                        .HasColumnType("integer");

                    b.Property<int>("SinavId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OgrenciId");

                    b.HasIndex("SinavId");

                    b.ToTable("SinavKayits");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.SinavTip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .HasColumnType("text");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.ToTable("SinavTips");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.SinavTur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .HasColumnType("text");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.ToTable("SinavTurs");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.Todo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("character varying(128)")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("Todos");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.Universite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("character varying(300)")
                        .HasMaxLength(300);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.ToTable("Universites");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.UserProfile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<bool>("IsNavMinified")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNavOpen")
                        .HasColumnType("boolean");

                    b.Property<string>("LastPageVisited")
                        .HasColumnType("text");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.YabanciBasvuru", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Accept")
                        .HasColumnType("boolean");

                    b.Property<string>("Ad")
                        .HasColumnType("text");

                    b.Property<string>("Adres")
                        .HasColumnType("text");

                    b.Property<string>("AnaAd")
                        .HasColumnType("text");

                    b.Property<string>("BabaAd")
                        .HasColumnType("text");

                    b.Property<string>("Cinsiyet")
                        .HasColumnType("text");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("DogumTarih")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DogumYer")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("IletisimBilgisi")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LiseDurum")
                        .HasColumnType("text");

                    b.Property<decimal>("LiseMezunNot")
                        .HasColumnType("numeric");

                    b.Property<string>("LiseMezuniyetAlan")
                        .HasColumnType("text");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("PassportNo")
                        .HasColumnType("text");

                    b.Property<string>("Sehir")
                        .HasColumnType("text");

                    b.Property<string>("Soyad")
                        .HasColumnType("text");

                    b.Property<string>("Tercih1")
                        .HasColumnType("text");

                    b.Property<string>("Tercih2")
                        .HasColumnType("text");

                    b.Property<string>("Tercih3")
                        .HasColumnType("text");

                    b.Property<string>("Tercih4")
                        .HasColumnType("text");

                    b.Property<string>("Tercih5")
                        .HasColumnType("text");

                    b.Property<string>("Ulke")
                        .HasColumnType("text");

                    b.Property<string>("YasaUlke")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("YabancıBasvurus");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("UniLife.Shared.DataModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("UniLife.Shared.DataModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniLife.Shared.DataModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("UniLife.Shared.DataModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniLife.Server.Models.Tenant", b =>
                {
                    b.HasOne("UniLife.Shared.DataModels.ApplicationUser", "Owner")
                        .WithOne("Tenant")
                        .HasForeignKey("UniLife.Server.Models.Tenant", "OwnerUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.AkademikTakvim", b =>
                {
                    b.HasOne("UniLife.Shared.DataModels.Donem", "Donem")
                        .WithMany()
                        .HasForeignKey("DonemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniLife.Shared.DataModels.Fakulte", "Fakulte")
                        .WithMany()
                        .HasForeignKey("FakulteId");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.Akademisyen", b =>
                {
                    b.HasOne("UniLife.Shared.DataModels.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.ApiLogItem", b =>
                {
                    b.HasOne("UniLife.Shared.DataModels.ApplicationUser", null)
                        .WithMany("ApiLogItems")
                        .HasForeignKey("ApplicationUserId");
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.Askerlik", b =>
                {
                    b.HasOne("UniLife.Shared.DataModels.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.Bolum", b =>
                {
                    b.HasOne("UniLife.Shared.DataModels.Fakulte", "Fakulte")
                        .WithMany("Bolums")
                        .HasForeignKey("FakulteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniLife.Shared.DataModels.OgrenimTur", "OgrenimTur")
                        .WithMany()
                        .HasForeignKey("OgrenimTurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.Ders", b =>
                {
                    b.HasOne("UniLife.Shared.DataModels.Bolum", "Bolum")
                        .WithMany("Derss")
                        .HasForeignKey("BolumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniLife.Shared.DataModels.Donem", "Donem")
                        .WithMany()
                        .HasForeignKey("DonemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniLife.Shared.DataModels.Fakulte", "Fakulte")
                        .WithMany("Derss")
                        .HasForeignKey("FakulteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniLife.Shared.DataModels.Mufredat", "Mufredat")
                        .WithMany("Derss")
                        .HasForeignKey("MufredatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniLife.Shared.DataModels.Program", "Program")
                        .WithMany("Derss")
                        .HasForeignKey("ProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.DersAcilan", b =>
                {
                    b.HasOne("UniLife.Shared.DataModels.Akademisyen", "Akademisyen")
                        .WithMany()
                        .HasForeignKey("AkademisyenId");

                    b.HasOne("UniLife.Shared.DataModels.Bolum", "Bolum")
                        .WithMany("DersAcilans")
                        .HasForeignKey("BolumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniLife.Shared.DataModels.Ders", "Ders")
                        .WithMany("DersAcilans")
                        .HasForeignKey("DersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniLife.Shared.DataModels.Donem", "Donem")
                        .WithMany()
                        .HasForeignKey("DonemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniLife.Shared.DataModels.Fakulte", "Fakulte")
                        .WithMany("DersAcilans")
                        .HasForeignKey("FakulteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniLife.Shared.DataModels.Mufredat", "Mufredat")
                        .WithMany("DersAcilans")
                        .HasForeignKey("MufredatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniLife.Shared.DataModels.Program", "Program")
                        .WithMany("DersAcilans")
                        .HasForeignKey("ProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.DersKayit", b =>
                {
                    b.HasOne("UniLife.Shared.DataModels.DersAcilan", "DersAcilan")
                        .WithMany("DersKayits")
                        .HasForeignKey("DersAcilanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniLife.Shared.DataModels.Ogrenci", "Ogrenci")
                        .WithMany("DersKayits")
                        .HasForeignKey("OgrenciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.Derslik", b =>
                {
                    b.HasOne("UniLife.Shared.DataModels.Bina", "Bina")
                        .WithMany("Dersliks")
                        .HasForeignKey("BinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.DerslikRezerv", b =>
                {
                    b.HasOne("UniLife.Shared.DataModels.DersAcilan", "DersAcilan")
                        .WithMany("DerslikRezervs")
                        .HasForeignKey("DersAcilanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniLife.Shared.DataModels.Derslik", "ResourceData")
                        .WithMany("DerslikRezervs")
                        .HasForeignKey("DerslikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.Donem", b =>
                {
                    b.HasOne("UniLife.Shared.DataModels.DonemTip", "DonemTip")
                        .WithMany()
                        .HasForeignKey("DonemTipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.Fakulte", b =>
                {
                    b.HasOne("UniLife.Shared.DataModels.OgrenimTur", "OgrenimTur")
                        .WithMany()
                        .HasForeignKey("OgrenimTurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniLife.Shared.DataModels.Universite", "Universite")
                        .WithMany("Fakultes")
                        .HasForeignKey("UniversiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.Harc", b =>
                {
                    b.HasOne("UniLife.Shared.DataModels.Donem", "Donem")
                        .WithMany("Harcs")
                        .HasForeignKey("DonemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniLife.Shared.DataModels.Program", "Program")
                        .WithMany("Harcs")
                        .HasForeignKey("ProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.Message", b =>
                {
                    b.HasOne("UniLife.Shared.DataModels.ApplicationUser", "Sender")
                        .WithMany("Messages")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.Mufredat", b =>
                {
                    b.HasOne("UniLife.Shared.DataModels.Program", "Program")
                        .WithMany()
                        .HasForeignKey("ProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.Nufus", b =>
                {
                    b.HasOne("UniLife.Shared.DataModels.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniLife.Shared.DataModels.Il", "Il")
                        .WithMany()
                        .HasForeignKey("IlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.OgrCeza", b =>
                {
                    b.HasOne("UniLife.Shared.DataModels.Ogrenci", "Ogrenci")
                        .WithMany()
                        .HasForeignKey("OgrenciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.OgrDondur", b =>
                {
                    b.HasOne("UniLife.Shared.DataModels.Ogrenci", "Ogrenci")
                        .WithMany()
                        .HasForeignKey("OgrenciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.OgrGecis", b =>
                {
                    b.HasOne("UniLife.Shared.DataModels.Ogrenci", "Ogrenci")
                        .WithMany()
                        .HasForeignKey("OgrenciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.OgrHarc", b =>
                {
                    b.HasOne("UniLife.Shared.DataModels.Donem", "Donem")
                        .WithMany()
                        .HasForeignKey("DonemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniLife.Shared.DataModels.Ogrenci", "Ogrenci")
                        .WithMany()
                        .HasForeignKey("OgrenciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.OgrStaj", b =>
                {
                    b.HasOne("UniLife.Shared.DataModels.Ogrenci", "Ogrenci")
                        .WithMany()
                        .HasForeignKey("OgrenciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.OgrTez", b =>
                {
                    b.HasOne("UniLife.Shared.DataModels.Ogrenci", "Ogrenci")
                        .WithMany()
                        .HasForeignKey("OgrenciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.Ogrenci", b =>
                {
                    b.HasOne("UniLife.Shared.DataModels.ApplicationUser", "ApplicationUser")
                        .WithMany("Ogrencis")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniLife.Shared.DataModels.Bolum", "Bolum")
                        .WithMany("Ogrencis")
                        .HasForeignKey("BolumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniLife.Shared.DataModels.Akademisyen", "Danisman")
                        .WithMany()
                        .HasForeignKey("DanismanId");

                    b.HasOne("UniLife.Shared.DataModels.Akademisyen", "DanismanIki")
                        .WithMany()
                        .HasForeignKey("DanismanIkiId");

                    b.HasOne("UniLife.Shared.DataModels.Fakulte", "Fakulte")
                        .WithMany("Ogrencis")
                        .HasForeignKey("FakulteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniLife.Shared.DataModels.KayitNeden", "KayitNeden")
                        .WithMany()
                        .HasForeignKey("KayitNedenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniLife.Shared.DataModels.Mufredat", "Mufredat")
                        .WithMany("Ogrencis")
                        .HasForeignKey("MufredatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniLife.Shared.DataModels.OgrenimDurum", "OgrenimDurum")
                        .WithMany()
                        .HasForeignKey("OgrenimDurumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniLife.Shared.DataModels.OgrenimTur", "OgrenimTur")
                        .WithMany()
                        .HasForeignKey("OgrenimTurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniLife.Shared.DataModels.Program", "Program")
                        .WithMany("Ogrencis")
                        .HasForeignKey("ProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.OgrenciDiger", b =>
                {
                    b.HasOne("UniLife.Shared.DataModels.Ogrenci", "Ogrenci")
                        .WithMany()
                        .HasForeignKey("OgrenciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.Osym", b =>
                {
                    b.HasOne("UniLife.Shared.DataModels.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.Personel", b =>
                {
                    b.HasOne("UniLife.Shared.DataModels.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.Program", b =>
                {
                    b.HasOne("UniLife.Shared.DataModels.Bolum", "Bolum")
                        .WithMany("Programs")
                        .HasForeignKey("BolumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniLife.Shared.DataModels.Fakulte", "Fakulte")
                        .WithMany()
                        .HasForeignKey("FakulteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.Sinav", b =>
                {
                    b.HasOne("UniLife.Shared.DataModels.DersAcilan", "DersAcilan")
                        .WithMany("Sinavs")
                        .HasForeignKey("DersAcilanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniLife.Shared.DataModels.SinavTip", "SinavTip")
                        .WithMany()
                        .HasForeignKey("SinavTipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniLife.Shared.DataModels.SinavTur", "SinavTur")
                        .WithMany()
                        .HasForeignKey("SinavTurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.SinavKayit", b =>
                {
                    b.HasOne("UniLife.Shared.DataModels.Ogrenci", "Ogrenci")
                        .WithMany("SinavKayits")
                        .HasForeignKey("OgrenciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniLife.Shared.DataModels.Sinav", "Sinav")
                        .WithMany("SinavKayits")
                        .HasForeignKey("SinavId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniLife.Shared.DataModels.UserProfile", b =>
                {
                    b.HasOne("UniLife.Shared.DataModels.ApplicationUser", "ApplicationUser")
                        .WithOne("Profile")
                        .HasForeignKey("UniLife.Shared.DataModels.UserProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
